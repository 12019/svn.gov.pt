 
//---------------------------------------------------------------------------
// The Installed event is sent after the feature Common
// is installed.
//---------------------------------------------------------------------------
#define CONFIG_PATH WINDIR^"beidgui.conf"
#define ORIGINAL_PATH_CERTS ".\\eidstore\\certs\\"
#define ORIGINAL_PATH_CRL ".\\eidstore\\crl\\"
#define NEW_PATH_CERTS TARGETDIR^"eidstore\\certs\\"
#define NEW_PATH_CRL TARGETDIR^"eidstore\\crl\\http\\crl.eid.belgium.be\\"
#define WM_WININICHANGE 0x001A 
#define HWND_BROADCAST 0xffff 
 
export prototype Common_Installed();
function Common_Installed()   
   NUMBER nvFileHandle, nvReturnVal;  
	NUMBER nResult, nvType, nvSize; 
  	STRING szKey, szEnv, szValue; 
    STRING 	szFileName, szDirName, szDirCache, szOldDirCache, szCmd, szCmdArgs;    
  	POINTER pEnv; 
    STRING sCaclsExe, sCaclsParam;
begin
	nvReturnVal = ReplaceProfString (CONFIG_PATH, "BEID_default","certs", ORIGINAL_PATH_CERTS, NEW_PATH_CERTS);
	nvReturnVal = ReplaceProfString (CONFIG_PATH, "BEID_default","crl", ORIGINAL_PATH_CRL, NEW_PATH_CRL);
    
    if (SYSINFO.WINNT.bWinVista) then      
    	sCaclsExe = "icacls";
    	sCaclsParam  = "/grant Users:(OI)(CI)M /T";
    else
    	sCaclsExe = "cacls"; 
    	sCaclsParam = "/T /E /G Users:C";
    endif; 

    //Give full access to crl folder
	szDirName = TARGETDIR^"eidstore";
	LaunchApplication (sCaclsExe, "\"" + szDirName + "\" " + sCaclsParam,"",5000,SW_HIDE,LAAW_OPTION_WAIT); 
        
    szOldDirCache = FOLDER_APPDATA ^ "Beid";    
    if (ExistsDir (szOldDirCache) = EXISTS) then   
   		DeleteDir (szOldDirCache, ALLCONTENTS);
   	endif;    
   	
    //Give full access to log folder
	szDirName = TARGETDIR^"log";
	LaunchApplication (sCaclsExe, "\"" + szDirName + "\" " + sCaclsParam,"",5000,SW_HIDE,LAAW_OPTION_WAIT); 
	
    //Give full access to .cache folder
	szDirName = TARGETDIR^".cache";
	LaunchApplication (sCaclsExe, "\"" + szDirName + "\" " + sCaclsParam,"",5000,SW_HIDE,LAAW_OPTION_WAIT); 
	LaunchApplication ("attrib", "+H \"" + szDirName + "\"","",5000,SW_HIDE,LAAW_OPTION_WAIT); 	
	   
/*
//Create Beid folder in All Users\Application Data
    RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
    RegDBGetKeyValueEx("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders",
    "Common AppData",
    nvType,szDirData,nvSize);
    
	szDirCache = szDirData ^ "Beid";
	CreateDir(szDirCache);

    szCmd = WINSYSDIR ^ "cmd.exe"; 
	szCmdArgs = "/c cacls \"" + szDirCache + "\" /T /E /G Users:C";
	LaunchAppAndWait(szCmd, szCmdArgs, WAIT);   
        
    szOldDirCache = FOLDER_APPDATA ^ "Beid";    
    if (ExistsDir (szOldDirCache) = EXISTS) then   
   		DeleteDir (szOldDirCache, ALLCONTENTS);
   	endif;
*/ 
/*
//Add PATH environment variable
      szKey = "SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment"; 
      RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE); 
      
      nResult = RegDBGetKeyValueEx(szKey, "PATH", nvType, szValue, nvSize); 
      
      if(StrFind (szValue, TARGETDIR + ";")<0 ) then
	      szValue = TARGETDIR + ";" + szValue; 
	      nResult = RegDBSetKeyValueEx(szKey, "PATH", REGDB_STRING, szValue, -1); 
	
	      if (nResult < 0) then 
	          MessageBox("Failed to Set Environment Variable", WARNING); 
	      else 
	          // Flush the NT registry to all applications. 
	          szEnv = "Environment"; 
	          pEnv = &szEnv; 
	          SendMessage (HWND_BROADCAST, WM_WININICHANGE, 0, pEnv ); 
	      endif; 
     endif;    
*/ 
   
//Add CLASSPATH environment variable
      szKey = "SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment"; 
      RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE); 
      
      nResult = RegDBGetKeyValueEx(szKey, "CLASSPATH", nvType, szValue, nvSize); 
      
      if(StrFind (szValue, TARGETDIR + ";")<0 ) then
	      szValue = TARGETDIR + ";" + szValue; 
	      nResult = RegDBSetKeyValueEx(szKey, "CLASSPATH", REGDB_STRING, szValue, -1); 
	
	      if (nResult < 0) then 
	          MessageBox("Failed to Set Environment Variable", WARNING); 
	      else 
	          // Flush the NT registry to all applications. 
	          szEnv = "Environment"; 
	          pEnv = &szEnv; 
	          SendMessage (HWND_BROADCAST, WM_WININICHANGE, 0, pEnv ); 
	      endif; 
     endif;     
     
//Register ActiveX
  	szDirName = WINSYSDIR^"beidlibaxctrl.dll";
	LaunchApplication ("regsvr32", "-s \"" + szDirName + "\"","",5000,SW_HIDE,LAAW_OPTION_WAIT); 

end;                

//---------------------------------------------------------------------------
// The Installing event is sent just before the feature 
// Common is installed.
//---------------------------------------------------------------------------
 
export prototype Common_Installing();
function Common_Installing()      
	STRING szOldDir;
begin
    szOldDir = TARGETDIR^"eidstore\\crl\\";    
    if (ExistsDir (szOldDir) = EXISTS) then   
   		DeleteDir (szOldDir, ALLCONTENTS);
   	endif;    
end;
//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Common is uninstalled.
//---------------------------------------------------------------------------
 
export prototype Common_UnInstalling();
function Common_UnInstalling()
	STRING szDirName;
begin
	 
//Unregister ActiveX
  	szDirName = WINSYSDIR^"beidlibaxctrl.dll";
	LaunchApplication ("regsvr32", "-u -s \"" + szDirName + "\"","",5000,SW_HIDE,LAAW_OPTION_WAIT);  
end;
//---------------------------------------------------------------------------
// The UnInstalled event is sent after the feature Common
// is uninstalled.
//---------------------------------------------------------------------------
 
export prototype Common_UnInstalled();
function Common_UnInstalled()
	string sRuntimeID, sProID, sSDKID, szDir;
  	STRING szKey, szEnv, szValue; 
	NUMBER nResult, nvType, nvSize; 
  	POINTER pEnv; 
begin   

	// Check whether other version 3.5 is still installed  
	//sRuntimeID="{40420E84-2E4C-46B2-942C-F1249E40FDCB}";
	//sProID=    "{4C2FBD23-962C-450A-A578-7556BC79B8B2}";
	sSDKID=    "{74F72AF9-35AA-40C6-82BA-5C3947F0D691}";
	if (RegDBKeyExist ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\"^sSDKID) < 0) then
	    
	    szDir = TARGETDIR ^ "log";    
 	    if (ExistsDir (szDir) = EXISTS) then   
	   		DeleteDir (szDir, ALLCONTENTS);
	   	endif;    
	   	
	    szDir = TARGETDIR ^ "eidstore";    
	    if (ExistsDir (szDir) = EXISTS) then   
	   		DeleteDir (szDir, ALLCONTENTS);
	   	endif;    
	   	
	    szDir = TARGETDIR ^ ".cache";    
	    if (ExistsDir (szDir) = EXISTS) then   
	   		DeleteDir (szDir, ALLCONTENTS);
	   	endif;        
	   	
	    szDir = TARGETDIR;    
	    if (ExistsDir (szDir) = EXISTS) then   
	   		DeleteDir (szDir, ONLYDIR);
	   	endif;    
	endif;       
	
//Remove CLASSPATH environment variable
      szKey = "SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment"; 
      RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE); 
      
      nResult = RegDBGetKeyValueEx(szKey, "CLASSPATH", nvType, szValue, nvSize); 
      
      StrReplace (szValue, TARGETDIR + ";", "",0);
	  nResult = RegDBSetKeyValueEx(szKey, "CLASSPATH", REGDB_STRING, szValue, -1); 
	
	  if (nResult < 0) then 
	  	MessageBox("Failed to Set Environment Variable", WARNING); 
	  else 
	  	// Flush the NT registry to all applications. 
	  	szEnv = "Environment"; 
	  	pEnv = &szEnv; 
	 	SendMessage (HWND_BROADCAST, WM_WININICHANGE, 0, pEnv ); 
      endif;     
     
end;