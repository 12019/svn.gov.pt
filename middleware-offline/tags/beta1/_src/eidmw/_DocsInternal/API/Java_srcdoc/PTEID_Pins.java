/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package be.portugal.eid;

/******************************************************************************//**
  * Container class for all pins on the card
  *********************************************************************************/
public class PTEID_Pins extends PTEID_Crypto {
  private long swigCPtr;

  protected PTEID_Pins(long cPtr, boolean cMemoryOwn) {
    super(pteidlibJava_WrapperJNI.SWIGPTEID_PinsUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PTEID_Pins obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      pteidlibJava_WrapperJNI.delete_PTEID_Pins(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

	/** The number of pins on the card */
public long count() throws java.lang.Exception {
    return pteidlibJava_WrapperJNI.PTEID_Pins_count(swigCPtr, this);
  }

	/**
	  * Get the pin by its Index
	  * @param ulIndex the PIN index
	  * Throws PTEID_ExParamRange() exception if the index is out of range
 	  */
  public PTEID_Pin getPinByNumber(long ulIndex) throws java.lang.Exception {
    return new PTEID_Pin(pteidlibJava_WrapperJNI.PTEID_Pins_getPinByNumber(swigCPtr, this, ulIndex), false);
  }

}
