/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace be.portugal.eid {

using System;
using System.Runtime.InteropServices;

/// <summary>Base class for the PTEID SDK Exceptions</summary>
public class PTEID_Exception : System.ApplicationException, IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PTEID_Exception(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PTEID_Exception obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PTEID_Exception() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pteidlib_dotNetPINVOKE.delete_PTEID_Exception(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  /// <summary>Constructor - Need error code that comes from eidErrors.h</summary>
  public PTEID_Exception(int lError)
      : this(pteidlib_dotNetPINVOKE.new_PTEID_Exception(lError), true)
  {
  }

  /// <summary>Return the error code</summary>
  public int GetError()
  {
    int ret = pteidlib_dotNetPINVOKE.PTEID_Exception_GetError(swigCPtr);
    return ret;
  }

}

}
