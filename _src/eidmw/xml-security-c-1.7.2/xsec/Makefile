# Makefile.in generated by automake 1.12.6 from Makefile.am.
# xsec/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright 2006-2010 The Apache Software Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/xml-security-c
pkgincludedir = $(includedir)/xml-security-c
pkglibdir = $(libdir)/xml-security-c
pkglibexecdir = $(libexecdir)/xml-security-c
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
noinst_PROGRAMS = $(am__EXEEXT_2)
bin_PROGRAMS = $(am__EXEEXT_1)

#
# The following blocks are conditionally added on the basis
# of selections made during the "configure" operation
am__append_1 = ${openssl_sources}
#am__append_2 = ${nss_sources}
subdir = xsec
DIST_COMMON = $(canoninclude_HEADERS) $(dsiginclude_HEADERS) \
	$(encinclude_HEADERS) $(frameworkinclude_HEADERS) \
	$(nssinclude_HEADERS) $(opensslinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp $(transformersinclude_HEADERS) \
	$(unixutilsinclude_HEADERS) $(utilsinclude_HEADERS) \
	$(xencinclude_HEADERS) $(xkmsinclude_HEADERS) \
	$(xscryptinclude_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/xsec/framework/XSECConfig.hpp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(canonincludedir)" "$(DESTDIR)$(dsigincludedir)" \
	"$(DESTDIR)$(encincludedir)" \
	"$(DESTDIR)$(frameworkincludedir)" \
	"$(DESTDIR)$(nssincludedir)" "$(DESTDIR)$(opensslincludedir)" \
	"$(DESTDIR)$(transformersincludedir)" \
	"$(DESTDIR)$(unixutilsincludedir)" \
	"$(DESTDIR)$(utilsincludedir)" "$(DESTDIR)$(xencincludedir)" \
	"$(DESTDIR)$(xkmsincludedir)" "$(DESTDIR)$(xscryptincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libxml_security_c_la_LIBADD =
am__libxml_security_c_la_SOURCES_DIST = canon/XSECC14n20010315.cpp \
	canon/XSECXMLNSStack.cpp canon/XSECCanon.cpp \
	dsig/DSIGKeyInfoPGPData.cpp dsig/DSIGReferenceList.cpp \
	dsig/DSIGKeyInfoValue.cpp dsig/DSIGKeyInfoDEREncoded.cpp \
	dsig/DSIGXPathHere.cpp dsig/DSIGAlgorithmHandlerDefault.cpp \
	dsig/DSIGXPathFilterExpr.cpp dsig/DSIGKeyInfoMgmtData.cpp \
	dsig/DSIGTransformXPathFilter.cpp dsig/DSIGSignedInfo.cpp \
	dsig/DSIGKeyInfoList.cpp dsig/DSIGConstants.cpp \
	dsig/DSIGSignature.cpp dsig/DSIGTransformXSL.cpp \
	dsig/DSIGObject.cpp dsig/DSIGTransformXPath.cpp \
	dsig/DSIGTransformEnvelope.cpp dsig/DSIGKeyInfoName.cpp \
	dsig/DSIGTransformBase64.cpp dsig/DSIGReference.cpp \
	dsig/DSIGKeyInfoSPKIData.cpp dsig/DSIGTransformList.cpp \
	dsig/DSIGKeyInfoX509.cpp dsig/DSIGKeyInfoExt.cpp \
	dsig/DSIGTransform.cpp dsig/DSIGTransformC14n.cpp \
	enc/XSECCryptoX509.cpp enc/XSECKeyInfoResolverDefault.cpp \
	enc/XSECCryptoUtils.cpp enc/XSECCryptoBase64.cpp \
	enc/XSCrypt/XSCryptCryptoBase64.cpp enc/XSECCryptoProvider.cpp \
	enc/XSECCryptoException.cpp framework/XSECError.cpp \
	framework/XSECAlgorithmMapper.cpp framework/XSECEnv.cpp \
	framework/XSECProvider.cpp framework/XSECException.cpp \
	framework/XSECURIResolverXerces.cpp transformers/TXFMBase.cpp \
	transformers/TXFMChain.cpp transformers/TXFMCipher.cpp \
	transformers/TXFMParser.cpp transformers/TXFMSB.cpp \
	transformers/TXFMEnvelope.cpp transformers/TXFMBase64.cpp \
	transformers/TXFMXPathFilter.cpp transformers/TXFMSHA1.cpp \
	transformers/TXFMC14n.cpp transformers/TXFMURL.cpp \
	transformers/TXFMOutputFile.cpp transformers/TXFMXPath.cpp \
	transformers/TXFMXSL.cpp transformers/TXFMDocObject.cpp \
	transformers/TXFMConcatChains.cpp transformers/TXFMMD5.cpp \
	utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp \
	utils/unixutils/XSECURIResolverGenericUnix.cpp \
	utils/unixutils/XSECBinHTTPURIInputStream.cpp \
	utils/XSECBinTXFMInputStream.cpp utils/XSECXPathNodeList.cpp \
	utils/XSECSafeBuffer.cpp utils/XSECTXFMInputSource.cpp \
	utils/XSECDOMUtils.cpp utils/XSECSafeBufferFormatter.cpp \
	utils/XSECSOAPRequestorSimple.cpp \
	utils/XSECNameSpaceExpander.cpp utils/XSECPlatformUtils.cpp \
	xenc/impl/XENCCipherReferenceImpl.cpp \
	xenc/impl/XENCEncryptionMethodImpl.cpp \
	xenc/impl/XENCEncryptedKeyImpl.hpp \
	xenc/impl/XENCCipherValueImpl.cpp xenc/impl/XENCCipherImpl.hpp \
	xenc/impl/XENCAlgorithmHandlerDefault.hpp \
	xenc/impl/XENCCipherDataImpl.hpp \
	xenc/impl/XENCEncryptionMethodImpl.hpp \
	xenc/impl/XENCAlgorithmHandlerDefault.cpp \
	xenc/impl/XENCEncryptedDataImpl.cpp \
	xenc/impl/XENCEncryptedTypeImpl.hpp \
	xenc/impl/XENCCipherDataImpl.cpp \
	xenc/impl/XENCEncryptedDataImpl.hpp \
	xenc/impl/XENCCipherValueImpl.hpp \
	xenc/impl/XENCEncryptedTypeImpl.cpp \
	xenc/impl/XENCCipherImpl.cpp \
	xenc/impl/XENCEncryptedKeyImpl.cpp \
	xenc/impl/XENCCipherReferenceImpl.hpp xkms/XKMSConstants.cpp \
	xkms/impl/XKMSCompoundRequestImpl.cpp \
	xkms/impl/XKMSRevokeKeyBindingImpl.hpp \
	xkms/impl/XKMSRecoverRequestImpl.cpp \
	xkms/impl/XKMSRegisterResultImpl.cpp \
	xkms/impl/XKMSRecoverResultImpl.cpp \
	xkms/impl/XKMSValidateResultImpl.hpp \
	xkms/impl/XKMSRevokeResultImpl.hpp \
	xkms/impl/XKMSCompoundResultImpl.cpp \
	xkms/impl/XKMSRevokeKeyBindingImpl.cpp \
	xkms/impl/XKMSCompoundResultImpl.hpp \
	xkms/impl/XKMSUnverifiedKeyBindingImpl.hpp \
	xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp \
	xkms/impl/XKMSQueryKeyBindingImpl.hpp \
	xkms/impl/XKMSPrototypeKeyBindingImpl.cpp \
	xkms/impl/XKMSValidateResultImpl.cpp \
	xkms/impl/XKMSRSAKeyPairImpl.hpp \
	xkms/impl/XKMSAuthenticationImpl.cpp \
	xkms/impl/XKMSNotBoundAuthenticationImpl.hpp \
	xkms/impl/XKMSCompoundRequestImpl.hpp \
	xkms/impl/XKMSPendingRequestImpl.hpp \
	xkms/impl/XKMSStatusResultImpl.cpp \
	xkms/impl/XKMSStatusImpl.hpp \
	xkms/impl/XKMSRegisterRequestImpl.hpp \
	xkms/impl/XKMSReissueRequestImpl.cpp \
	xkms/impl/XKMSKeyBindingImpl.cpp \
	xkms/impl/XKMSUseKeyWithImpl.hpp \
	xkms/impl/XKMSRequestAbstractTypeImpl.cpp \
	xkms/impl/XKMSRespondWithImpl.cpp \
	xkms/impl/XKMSResponseMechanismImpl.hpp \
	xkms/impl/XKMSResultImpl.hpp \
	xkms/impl/XKMSReissueResultImpl.cpp \
	xkms/impl/XKMSAuthenticationImpl.hpp \
	xkms/impl/XKMSMessageAbstractTypeImpl.cpp \
	xkms/impl/XKMSRevokeResultImpl.cpp \
	xkms/impl/XKMSStatusResultImpl.hpp \
	xkms/impl/XKMSReissueKeyBindingImpl.hpp \
	xkms/impl/XKMSRespondWithImpl.hpp \
	xkms/impl/XKMSRevokeRequestImpl.cpp \
	xkms/impl/XKMSPendingRequestImpl.cpp \
	xkms/impl/XKMSRecoverResultImpl.hpp \
	xkms/impl/XKMSValidateRequestImpl.cpp \
	xkms/impl/XKMSStatusRequestImpl.hpp \
	xkms/impl/XKMSRecoverRequestImpl.hpp \
	xkms/impl/XKMSRecoverKeyBindingImpl.cpp \
	xkms/impl/XKMSRSAKeyPairImpl.cpp \
	xkms/impl/XKMSMessageAbstractTypeImpl.hpp \
	xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp \
	xkms/impl/XKMSValidityIntervalImpl.hpp \
	xkms/impl/XKMSLocateResultImpl.hpp \
	xkms/impl/XKMSLocateRequestImpl.cpp \
	xkms/impl/XKMSResultTypeImpl.cpp \
	xkms/impl/XKMSRecoverKeyBindingImpl.hpp \
	xkms/impl/XKMSResultImpl.cpp \
	xkms/impl/XKMSValidityIntervalImpl.cpp \
	xkms/impl/XKMSRegisterRequestImpl.cpp \
	xkms/impl/XKMSReissueResultImpl.hpp \
	xkms/impl/XKMSStatusImpl.cpp \
	xkms/impl/XKMSReissueRequestImpl.hpp \
	xkms/impl/XKMSStatusRequestImpl.cpp \
	xkms/impl/XKMSReissueKeyBindingImpl.cpp \
	xkms/impl/XKMSKeyBindingImpl.hpp \
	xkms/impl/XKMSValidateRequestImpl.hpp \
	xkms/impl/XKMSKeyBindingAbstractTypeImpl.hpp \
	xkms/impl/XKMSResultTypeImpl.hpp \
	xkms/impl/XKMSMessageFactoryImpl.cpp \
	xkms/impl/XKMSRevokeRequestImpl.hpp \
	xkms/impl/XKMSResponseMechanismImpl.cpp \
	xkms/impl/XKMSNotBoundAuthentication.cpp \
	xkms/impl/XKMSLocateRequestImpl.hpp \
	xkms/impl/XKMSLocateResultImpl.cpp \
	xkms/impl/XKMSRequestAbstractTypeImpl.hpp \
	xkms/impl/XKMSQueryKeyBindingImpl.cpp \
	xkms/impl/XKMSUseKeyWithImpl.cpp \
	xkms/impl/XKMSMessageFactoryImpl.hpp \
	xkms/impl/XKMSPrototypeKeyBindingImpl.hpp \
	xkms/impl/XKMSRegisterResultImpl.hpp \
	enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp \
	enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp \
	enc/OpenSSL/OpenSSLCryptoHash.cpp \
	enc/OpenSSL/OpenSSLCryptoProvider.cpp \
	enc/OpenSSL/OpenSSLCryptoX509.cpp \
	enc/OpenSSL/OpenSSLCryptoBase64.cpp \
	enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp \
	enc/OpenSSL/OpenSSLCryptoKeyEC.cpp \
	enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp \
	enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp enc/NSS/NSSCryptoX509.cpp \
	enc/NSS/NSSCryptoHashHMAC.cpp enc/NSS/NSSCryptoHash.cpp \
	enc/NSS/NSSCryptoKeyDSA.cpp enc/NSS/NSSCryptoProvider.cpp \
	enc/NSS/NSSCryptoSymmetricKey.cpp enc/NSS/NSSCryptoKeyRSA.cpp \
	enc/NSS/NSSCryptoKeyHMAC.cpp
am__objects_1 = XSECC14n20010315.lo XSECXMLNSStack.lo XSECCanon.lo
am__objects_2 = DSIGKeyInfoPGPData.lo DSIGReferenceList.lo \
	DSIGKeyInfoValue.lo DSIGKeyInfoDEREncoded.lo DSIGXPathHere.lo \
	DSIGAlgorithmHandlerDefault.lo DSIGXPathFilterExpr.lo \
	DSIGKeyInfoMgmtData.lo DSIGTransformXPathFilter.lo \
	DSIGSignedInfo.lo DSIGKeyInfoList.lo DSIGConstants.lo \
	DSIGSignature.lo DSIGTransformXSL.lo DSIGObject.lo \
	DSIGTransformXPath.lo DSIGTransformEnvelope.lo \
	DSIGKeyInfoName.lo DSIGTransformBase64.lo DSIGReference.lo \
	DSIGKeyInfoSPKIData.lo DSIGTransformList.lo DSIGKeyInfoX509.lo \
	DSIGKeyInfoExt.lo DSIGTransform.lo DSIGTransformC14n.lo
am__objects_3 = XSECCryptoX509.lo XSECKeyInfoResolverDefault.lo \
	XSECCryptoUtils.lo XSECCryptoBase64.lo XSCryptCryptoBase64.lo \
	XSECCryptoProvider.lo XSECCryptoException.lo
am__objects_4 = XSECError.lo XSECAlgorithmMapper.lo XSECEnv.lo \
	XSECProvider.lo XSECException.lo XSECURIResolverXerces.lo
am__objects_5 = TXFMBase.lo TXFMChain.lo TXFMCipher.lo TXFMParser.lo \
	TXFMSB.lo TXFMEnvelope.lo TXFMBase64.lo TXFMXPathFilter.lo \
	TXFMSHA1.lo TXFMC14n.lo TXFMURL.lo TXFMOutputFile.lo \
	TXFMXPath.lo TXFMXSL.lo TXFMDocObject.lo TXFMConcatChains.lo \
	TXFMMD5.lo
am__objects_6 = XSECSOAPRequestorSimpleUnix.lo \
	XSECURIResolverGenericUnix.lo XSECBinHTTPURIInputStream.lo \
	XSECBinTXFMInputStream.lo XSECXPathNodeList.lo \
	XSECSafeBuffer.lo XSECTXFMInputSource.lo XSECDOMUtils.lo \
	XSECSafeBufferFormatter.lo XSECSOAPRequestorSimple.lo \
	XSECNameSpaceExpander.lo XSECPlatformUtils.lo
am__objects_7 = XENCCipherReferenceImpl.lo XENCEncryptionMethodImpl.lo \
	XENCCipherValueImpl.lo XENCAlgorithmHandlerDefault.lo \
	XENCEncryptedDataImpl.lo XENCCipherDataImpl.lo \
	XENCEncryptedTypeImpl.lo XENCCipherImpl.lo \
	XENCEncryptedKeyImpl.lo
am__objects_8 = XKMSConstants.lo XKMSCompoundRequestImpl.lo \
	XKMSRecoverRequestImpl.lo XKMSRegisterResultImpl.lo \
	XKMSRecoverResultImpl.lo XKMSCompoundResultImpl.lo \
	XKMSRevokeKeyBindingImpl.lo XKMSKeyBindingAbstractTypeImpl.lo \
	XKMSPrototypeKeyBindingImpl.lo XKMSValidateResultImpl.lo \
	XKMSAuthenticationImpl.lo XKMSStatusResultImpl.lo \
	XKMSReissueRequestImpl.lo XKMSKeyBindingImpl.lo \
	XKMSRequestAbstractTypeImpl.lo XKMSRespondWithImpl.lo \
	XKMSReissueResultImpl.lo XKMSMessageAbstractTypeImpl.lo \
	XKMSRevokeResultImpl.lo XKMSRevokeRequestImpl.lo \
	XKMSPendingRequestImpl.lo XKMSValidateRequestImpl.lo \
	XKMSRecoverKeyBindingImpl.lo XKMSRSAKeyPairImpl.lo \
	XKMSUnverifiedKeyBindingImpl.lo XKMSLocateRequestImpl.lo \
	XKMSResultTypeImpl.lo XKMSResultImpl.lo \
	XKMSValidityIntervalImpl.lo XKMSRegisterRequestImpl.lo \
	XKMSStatusImpl.lo XKMSStatusRequestImpl.lo \
	XKMSReissueKeyBindingImpl.lo XKMSMessageFactoryImpl.lo \
	XKMSResponseMechanismImpl.lo XKMSNotBoundAuthentication.lo \
	XKMSLocateResultImpl.lo XKMSQueryKeyBindingImpl.lo \
	XKMSUseKeyWithImpl.lo
am__objects_9 = OpenSSLCryptoHashHMAC.lo OpenSSLCryptoKeyRSA.lo \
	OpenSSLCryptoHash.lo OpenSSLCryptoProvider.lo \
	OpenSSLCryptoX509.lo OpenSSLCryptoBase64.lo \
	OpenSSLCryptoKeyDSA.lo OpenSSLCryptoKeyEC.lo \
	OpenSSLCryptoSymmetricKey.lo OpenSSLCryptoKeyHMAC.lo
am__objects_10 = $(am__objects_9)
am__objects_11 = NSSCryptoX509.lo NSSCryptoHashHMAC.lo \
	NSSCryptoHash.lo NSSCryptoKeyDSA.lo NSSCryptoProvider.lo \
	NSSCryptoSymmetricKey.lo NSSCryptoKeyRSA.lo \
	NSSCryptoKeyHMAC.lo
#am__objects_12 = $(am__objects_11)
am__objects_13 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_10) \
	$(am__objects_12)
am_libxml_security_c_la_OBJECTS = $(am__objects_13)
libxml_security_c_la_OBJECTS = $(am_libxml_security_c_la_OBJECTS)
libxml_security_c_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libxml_security_c_la_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = xtest$(EXEEXT) c14n$(EXEEXT) checksig$(EXEEXT) \
	templatesign$(EXEEXT) txfmout$(EXEEXT) siginf$(EXEEXT) \
	cipher$(EXEEXT) xklient$(EXEEXT)
am__EXEEXT_2 = simpleHMAC$(EXEEXT) simpleValidate$(EXEEXT) \
	simpleEncrypt$(EXEEXT) simpleDecrypt$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_c14n_OBJECTS = c14n.$(OBJEXT)
c14n_OBJECTS = $(am_c14n_OBJECTS)
c14n_LDADD = $(LDADD)
c14n_DEPENDENCIES = libxml-security-c.la
am_checksig_OBJECTS = checksig.$(OBJEXT) AnonymousResolver.$(OBJEXT) \
	InteropResolver.$(OBJEXT)
checksig_OBJECTS = $(am_checksig_OBJECTS)
checksig_LDADD = $(LDADD)
checksig_DEPENDENCIES = libxml-security-c.la
am_cipher_OBJECTS = cipher.$(OBJEXT) XencInteropResolver.$(OBJEXT)
cipher_OBJECTS = $(am_cipher_OBJECTS)
cipher_LDADD = $(LDADD)
cipher_DEPENDENCIES = libxml-security-c.la
am_siginf_OBJECTS = siginf.$(OBJEXT)
siginf_OBJECTS = $(am_siginf_OBJECTS)
siginf_LDADD = $(LDADD)
siginf_DEPENDENCIES = libxml-security-c.la
am_simpleDecrypt_OBJECTS = simpleDecrypt.$(OBJEXT) \
	IOStreamOutputter.$(OBJEXT)
simpleDecrypt_OBJECTS = $(am_simpleDecrypt_OBJECTS)
simpleDecrypt_LDADD = $(LDADD)
simpleDecrypt_DEPENDENCIES = libxml-security-c.la
am_simpleEncrypt_OBJECTS = simpleEncrypt.$(OBJEXT) \
	IOStreamOutputter.$(OBJEXT)
simpleEncrypt_OBJECTS = $(am_simpleEncrypt_OBJECTS)
simpleEncrypt_LDADD = $(LDADD)
simpleEncrypt_DEPENDENCIES = libxml-security-c.la
am_simpleHMAC_OBJECTS = simpleHMAC.$(OBJEXT) \
	IOStreamOutputter.$(OBJEXT)
simpleHMAC_OBJECTS = $(am_simpleHMAC_OBJECTS)
simpleHMAC_LDADD = $(LDADD)
simpleHMAC_DEPENDENCIES = libxml-security-c.la
am_simpleValidate_OBJECTS = simpleValidate.$(OBJEXT) \
	IOStreamOutputter.$(OBJEXT)
simpleValidate_OBJECTS = $(am_simpleValidate_OBJECTS)
simpleValidate_LDADD = $(LDADD)
simpleValidate_DEPENDENCIES = libxml-security-c.la
am_templatesign_OBJECTS = templatesign.$(OBJEXT)
templatesign_OBJECTS = $(am_templatesign_OBJECTS)
templatesign_LDADD = $(LDADD)
templatesign_DEPENDENCIES = libxml-security-c.la
am_txfmout_OBJECTS = txfmout.$(OBJEXT)
txfmout_OBJECTS = $(am_txfmout_OBJECTS)
txfmout_LDADD = $(LDADD)
txfmout_DEPENDENCIES = libxml-security-c.la
am_xklient_OBJECTS = xklient.$(OBJEXT)
xklient_OBJECTS = $(am_xklient_OBJECTS)
xklient_LDADD = $(LDADD)
xklient_DEPENDENCIES = libxml-security-c.la
am_xtest_OBJECTS = xtest.$(OBJEXT)
xtest_OBJECTS = $(am_xtest_OBJECTS)
xtest_LDADD = $(LDADD)
xtest_DEPENDENCIES = libxml-security-c.la
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/xsec/framework
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libxml_security_c_la_SOURCES) $(c14n_SOURCES) \
	$(checksig_SOURCES) $(cipher_SOURCES) $(siginf_SOURCES) \
	$(simpleDecrypt_SOURCES) $(simpleEncrypt_SOURCES) \
	$(simpleHMAC_SOURCES) $(simpleValidate_SOURCES) \
	$(templatesign_SOURCES) $(txfmout_SOURCES) $(xklient_SOURCES) \
	$(xtest_SOURCES)
DIST_SOURCES = $(am__libxml_security_c_la_SOURCES_DIST) \
	$(c14n_SOURCES) $(checksig_SOURCES) $(cipher_SOURCES) \
	$(siginf_SOURCES) $(simpleDecrypt_SOURCES) \
	$(simpleEncrypt_SOURCES) $(simpleHMAC_SOURCES) \
	$(simpleValidate_SOURCES) $(templatesign_SOURCES) \
	$(txfmout_SOURCES) $(xklient_SOURCES) $(xtest_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(canoninclude_HEADERS) $(dsiginclude_HEADERS) \
	$(encinclude_HEADERS) $(frameworkinclude_HEADERS) \
	$(nssinclude_HEADERS) $(opensslinclude_HEADERS) \
	$(transformersinclude_HEADERS) $(unixutilsinclude_HEADERS) \
	$(utilsinclude_HEADERS) $(xencinclude_HEADERS) \
	$(xkmsinclude_HEADERS) $(xscryptinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/agrr/pteid-mw/xml-security-c-1.7.2/build-aux/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/agrr/pteid-mw/xml-security-c-1.7.2/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/agrr/pteid-mw/xml-security-c-1.7.2/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/agrr/pteid-mw/xml-security-c-1.7.2/build-aux/missing --run automake-1.12
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -g -O2 -O2 -DNDEBUG -pthread -DXSEC_LIBRARY_BUILD
CPP = gcc -E
CPPFLAGS =   
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall  -O2 -DNDEBUG -pthread -DXSEC_LIBRARY_BUILD
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lxerces-c -lm   -lssl -lcrypto  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/agrr/pteid-mw/xml-security-c-1.7.2/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = xml-security-c
PACKAGE_BUGREPORT = dev@santuario.apache.org
PACKAGE_NAME = XML-Security-C
PACKAGE_STRING = XML-Security-C 1.7.2
PACKAGE_TARNAME = xml-security-c
PACKAGE_URL = 
PACKAGE_VERSION = 1.7.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.7.2
abs_builddir = /home/agrr/pteid-mw/xml-security-c-1.7.2/xsec
abs_srcdir = /home/agrr/pteid-mw/xml-security-c-1.7.2/xsec
abs_top_builddir = /home/agrr/pteid-mw/xml-security-c-1.7.2
abs_top_srcdir = /home/agrr/pteid-mw/xml-security-c-1.7.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/agrr/pteid-mw/xml-security-c-1.7.2/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = foreign
AM_CPPFLAGS = -I..
LDADD = libxml-security-c.la

#
# The following are sample programs.  They are NOT installed
#

# HMAC sign

# HMAC validate

# Encrypt

# Decrypt
samples = simpleHMAC simpleValidate simpleEncrypt simpleDecrypt
simpleHMAC_SOURCES = \
  samples/simpleHMAC.cpp \
  samples/IOStreamOutputter.cpp \
  samples/IOStreamOutputter.hpp

simpleValidate_SOURCES = \
  samples/simpleValidate.cpp \
  samples/IOStreamOutputter.cpp \
  samples/IOStreamOutputter.hpp

simpleEncrypt_SOURCES = \
  samples/simpleEncrypt.cpp \
  samples/IOStreamOutputter.cpp \
  samples/IOStreamOutputter.hpp

simpleDecrypt_SOURCES = \
  samples/simpleDecrypt.cpp \
  samples/IOStreamOutputter.cpp \
  samples/IOStreamOutputter.hpp


#
# Finally we compile the tools that can be used to manipulate
# XML Security inputs and outputs
#

# xtest
tools = xtest c14n checksig templatesign txfmout siginf cipher xklient
xtest_SOURCES = \
  tools/xtest/xtest.cpp

c14n_SOURCES = \
  tools/c14n/c14n.cpp

checksig_SOURCES = \
  tools/checksig/checksig.cpp \
  tools/checksig/AnonymousResolver.hpp \
  tools/checksig/AnonymousResolver.cpp \
  tools/checksig/InteropResolver.hpp \
  tools/checksig/InteropResolver.cpp

templatesign_SOURCES = \
  tools/templatesign/templatesign.cpp

txfmout_SOURCES = \
  tools/txfmout/txfmout.cpp

siginf_SOURCES = \
  tools/siginf/siginf.cpp

cipher_SOURCES = \
  tools/cipher/cipher.cpp \
  tools/cipher/XencInteropResolver.hpp \
  tools/cipher/XencInteropResolver.cpp

xklient_SOURCES = \
  tools/xklient/xklient.cpp

lib_LTLIBRARIES = libxml-security-c.la
xsecincludedir = $(includedir)/xsec
canonincludedir = $(includedir)/xsec/canon
encincludedir = $(includedir)/xsec/enc
xscryptincludedir = $(includedir)/xsec/enc/XSCrypt
opensslincludedir = $(includedir)/xsec/enc/OpenSSL
nssincludedir = $(includedir)/xsec/enc/NSS
dsigincludedir = $(includedir)/xsec/dsig
frameworkincludedir = $(includedir)/xsec/framework
transformersincludedir = $(includedir)/xsec/transformers
utilsincludedir = $(includedir)/xsec/utils
unixutilsincludedir = $(includedir)/xsec/utils/unixutils
xencincludedir = $(includedir)/xsec/xenc
xkmsincludedir = $(includedir)/xsec/xkms

# The required include files

#       A line like the following will generate a list of headers
#       for a given directory: (must be issued from base directory)
#
# find src/framework -name '*.hpp' -exec echo {} \\ ";" | sed "s/src/  xsec/g"

# Canon
canoninclude_HEADERS = \
  canon/XSECXMLNSStack.hpp \
  canon/XSECCanon.hpp \
  canon/XSECC14n20010315.hpp


# enc
encinclude_HEADERS = \
  enc/XSECCryptoKeyHMAC.hpp \
  enc/XSECCryptoX509.hpp \
  enc/XSECCryptoKeyDSA.hpp \
  enc/XSECCryptoKeyEC.hpp \
  enc/XSECKeyInfoResolver.hpp \
  enc/XSECCryptoHash.hpp \
  enc/XSECCryptoBase64.hpp \
  enc/XSECCryptoSymmetricKey.hpp \
  enc/XSECCryptoKey.hpp \
  enc/XSECCryptoProvider.hpp \
  enc/XSECKeyInfoResolverDefault.hpp \
  enc/XSECCryptoKeyRSA.hpp \
  enc/XSECCryptoException.hpp \
  enc/XSECCryptoUtils.hpp

xscryptinclude_HEADERS = \
  enc/XSCrypt/XSCryptCryptoBase64.hpp

opensslinclude_HEADERS = \
  enc/OpenSSL/OpenSSLCryptoBase64.hpp \
  enc/OpenSSL/OpenSSLCryptoSymmetricKey.hpp \
  enc/OpenSSL/OpenSSLCryptoProvider.hpp \
  enc/OpenSSL/OpenSSLCryptoKeyRSA.hpp \
  enc/OpenSSL/OpenSSLCryptoX509.hpp \
  enc/OpenSSL/OpenSSLCryptoHashHMAC.hpp \
  enc/OpenSSL/OpenSSLCryptoKeyDSA.hpp \
  enc/OpenSSL/OpenSSLCryptoKeyEC.hpp \
  enc/OpenSSL/OpenSSLCryptoKeyHMAC.hpp \
  enc/OpenSSL/OpenSSLCryptoHash.hpp 

nssinclude_HEADERS = \
  enc/NSS/NSSCryptoX509.hpp \
  enc/NSS/NSSCryptoHashHMAC.hpp \
  enc/NSS/NSSCryptoKeyDSA.hpp \
  enc/NSS/NSSCryptoKeyHMAC.hpp \
  enc/NSS/NSSCryptoHash.hpp \
  enc/NSS/NSSCryptoSymmetricKey.hpp \
  enc/NSS/NSSCryptoProvider.hpp \
  enc/NSS/NSSCryptoKeyRSA.hpp 

dsiginclude_HEADERS = \
  dsig/DSIGKeyInfoSPKIData.hpp \
  dsig/DSIGXPathHere.hpp \
  dsig/DSIGAlgorithmHandlerDefault.hpp \
  dsig/DSIGXPathFilterExpr.hpp \
  dsig/DSIGKeyInfoX509.hpp \
  dsig/DSIGKeyInfoList.hpp \
  dsig/DSIGKeyInfoValue.hpp \
  dsig/DSIGKeyInfoDEREncoded.hpp \
  dsig/DSIGTransformC14n.hpp \
  dsig/DSIGTransformXSL.hpp \
  dsig/DSIGKeyInfo.hpp \
  dsig/DSIGKeyInfoPGPData.hpp \
  dsig/DSIGKeyInfoExt.hpp \
  dsig/DSIGObject.hpp \
  dsig/DSIGTransformList.hpp \
  dsig/DSIGTransform.hpp \
  dsig/DSIGTransformBase64.hpp \
  dsig/DSIGTransformXPath.hpp \
  dsig/DSIGKeyInfoMgmtData.hpp \
  dsig/DSIGSignedInfo.hpp \
  dsig/DSIGTransformXPathFilter.hpp \
  dsig/DSIGReferenceList.hpp \
  dsig/DSIGReference.hpp \
  dsig/DSIGSignature.hpp \
  dsig/DSIGKeyInfoName.hpp \
  dsig/DSIGTransformEnvelope.hpp \
  dsig/DSIGConstants.hpp

frameworkinclude_HEADERS = \
  framework/XSECAlgorithmHandler.hpp \
  framework/XSECURIResolver.hpp \
  framework/XSECDefs.hpp \
  framework/XSECEnv.hpp \
  framework/XSECException.hpp \
  framework/XSECError.hpp \
  framework/XSECProvider.hpp \
  framework/XSECConfig.hpp \
  framework/XSECURIResolverXerces.hpp \
  framework/XSECAlgorithmMapper.hpp \
  framework/XSECW32Config.hpp \
  framework/XSECVersion.hpp

transformersinclude_HEADERS = \
  transformers/TXFMXPathFilter.hpp \
  transformers/TXFMSHA1.hpp \
  transformers/TXFMParser.hpp \
  transformers/TXFMOutputFile.hpp \
  transformers/TXFMURL.hpp \
  transformers/TXFMBase.hpp \
  transformers/TXFMCipher.hpp \
  transformers/TXFMEnvelope.hpp \
  transformers/TXFMChain.hpp \
  transformers/TXFMMD5.hpp \
  transformers/TXFMDocObject.hpp \
  transformers/TXFMConcatChains.hpp \
  transformers/TXFMSB.hpp \
  transformers/TXFMC14n.hpp \
  transformers/TXFMXSL.hpp \
  transformers/TXFMXPath.hpp \
  transformers/TXFMBase64.hpp

utilsinclude_HEADERS = \
  utils/XSECAutoPtr.hpp \
  utils/XSECSafeBuffer.hpp \
  utils/XSECSOAPRequestor.hpp \
  utils/XSECTXFMInputSource.hpp \
  utils/XSECNameSpaceExpander.hpp \
  utils/XSECSOAPRequestorSimple.hpp \
  utils/XSECXPathNodeList.hpp \
  utils/XSECSafeBufferFormatter.hpp \
  utils/XSECDOMUtils.hpp \
  utils/XSECBinTXFMInputStream.hpp \
  utils/XSECPlatformUtils.hpp 

unixutilsinclude_HEADERS = \
  utils/unixutils/XSECURIResolverGenericUnix.hpp \
  utils/unixutils/XSECBinHTTPURIInputStream.hpp

xencinclude_HEADERS = \
  xenc/XENCEncryptionMethod.hpp \
  xenc/XENCEncryptedType.hpp \
  xenc/XENCCipherData.hpp \
  xenc/XENCEncryptedKey.hpp \
  xenc/XENCCipherValue.hpp \
  xenc/XENCEncryptedData.hpp \
  xenc/XENCCipherReference.hpp \
  xenc/XENCCipher.hpp

xkmsinclude_HEADERS = \
  xkms/XKMSNotBoundAuthentication.hpp \
  xkms/XKMSValidateResult.hpp \
  xkms/XKMSValidityInterval.hpp \
  xkms/XKMSStatusRequest.hpp \
  xkms/XKMSRegisterRequest.hpp \
  xkms/XKMSPendingRequest.hpp \
  xkms/XKMSCompoundRequest.hpp \
  xkms/XKMSUseKeyWith.hpp \
  xkms/XKMSValidateRequest.hpp \
  xkms/XKMSUnverifiedKeyBinding.hpp \
  xkms/XKMSLocateResult.hpp \
  xkms/XKMSRespondWith.hpp \
  xkms/XKMSQueryKeyBinding.hpp \
  xkms/XKMSPrototypeKeyBinding.hpp \
  xkms/XKMSKeyBindingAbstractType.hpp \
  xkms/XKMSMessageAbstractType.hpp \
  xkms/XKMSMessageFactory.hpp \
  xkms/XKMSConstants.hpp \
  xkms/XKMSRequestAbstractType.hpp \
  xkms/XKMSResult.hpp \
  xkms/XKMSAuthentication.hpp \
  xkms/XKMSLocateRequest.hpp \
  xkms/XKMSResultType.hpp \
  xkms/XKMSStatusResult.hpp \
  xkms/XKMSKeyBinding.hpp \
  xkms/XKMSCompoundResult.hpp \
  xkms/XKMSRegisterResult.hpp \
  xkms/XKMSResponseMechanism.hpp \
  xkms/XKMSStatus.hpp \
  xkms/XKMSRevokeRequest.hpp \
  xkms/XKMSRevokeResult.hpp \
  xkms/XKMSRecoverKeyBinding.hpp \
  xkms/XKMSRevokeKeyBinding.hpp \
  xkms/XKMSRSAKeyPair.hpp \
  xkms/XKMSRecoverResult.hpp \
  xkms/XKMSReissueResult.hpp \
  xkms/XKMSRecoverRequest.hpp \
  xkms/XKMSReissueRequest.hpp \
  xkms/XKMSReissueKeyBinding.hpp

libxml_security_c_la_SOURCES = ${lib_sources}

# canon

# Signature

# Main encryption sources

# Framework sources

# transformers

# Utility sources

# XML Encryption

# XML Key Management
lib_sources = ${canon_sources} ${dsig_sources} ${enc_sources} \
	${framework_sources} ${txfm_sources} ${utils_sources} \
	${xenc_sources} ${xkms_sources} $(am__append_1) \
	$(am__append_2)

# Sources are build up using a find command:
#
# find xsec/transformers/ -name '*.cpp' -exec echo {} \\ ";" | sed "s/xsec\//  ..\/xsec\//g"

# canon
canon_sources = \
  canon/XSECC14n20010315.cpp \
  canon/XSECXMLNSStack.cpp \
  canon/XSECCanon.cpp


# Signature
dsig_sources = \
  dsig/DSIGKeyInfoPGPData.cpp \
  dsig/DSIGReferenceList.cpp \
  dsig/DSIGKeyInfoValue.cpp \
  dsig/DSIGKeyInfoDEREncoded.cpp \
  dsig/DSIGXPathHere.cpp \
  dsig/DSIGAlgorithmHandlerDefault.cpp \
  dsig/DSIGXPathFilterExpr.cpp \
  dsig/DSIGKeyInfoMgmtData.cpp \
  dsig/DSIGTransformXPathFilter.cpp \
  dsig/DSIGSignedInfo.cpp \
  dsig/DSIGKeyInfoList.cpp \
  dsig/DSIGConstants.cpp \
  dsig/DSIGSignature.cpp \
  dsig/DSIGTransformXSL.cpp \
  dsig/DSIGObject.cpp \
  dsig/DSIGTransformXPath.cpp \
  dsig/DSIGTransformEnvelope.cpp \
  dsig/DSIGKeyInfoName.cpp \
  dsig/DSIGTransformBase64.cpp \
  dsig/DSIGReference.cpp \
  dsig/DSIGKeyInfoSPKIData.cpp \
  dsig/DSIGTransformList.cpp \
  dsig/DSIGKeyInfoX509.cpp \
  dsig/DSIGKeyInfoExt.cpp \
  dsig/DSIGTransform.cpp \
  dsig/DSIGTransformC14n.cpp


# Main Crypto interface routines
enc_sources = \
  enc/XSECCryptoX509.cpp \
  enc/XSECKeyInfoResolverDefault.cpp \
  enc/XSECCryptoUtils.cpp \
  enc/XSECCryptoBase64.cpp \
  enc/XSCrypt/XSCryptCryptoBase64.cpp \
  enc/XSECCryptoProvider.cpp \
  enc/XSECCryptoException.cpp


# Framework files
framework_sources = \
  framework/XSECError.cpp \
  framework/XSECAlgorithmMapper.cpp \
  framework/XSECEnv.cpp \
  framework/XSECProvider.cpp \
  framework/XSECException.cpp \
  framework/XSECURIResolverXerces.cpp

txfm_sources = \
  transformers/TXFMBase.cpp \
  transformers/TXFMChain.cpp \
  transformers/TXFMCipher.cpp \
  transformers/TXFMParser.cpp \
  transformers/TXFMSB.cpp \
  transformers/TXFMEnvelope.cpp \
  transformers/TXFMBase64.cpp \
  transformers/TXFMXPathFilter.cpp \
  transformers/TXFMSHA1.cpp \
  transformers/TXFMC14n.cpp \
  transformers/TXFMURL.cpp \
  transformers/TXFMOutputFile.cpp \
  transformers/TXFMXPath.cpp \
  transformers/TXFMXSL.cpp \
  transformers/TXFMDocObject.cpp \
  transformers/TXFMConcatChains.cpp \
  transformers/TXFMMD5.cpp


# Utility files.  Note we don't worry about checking
# if the UNIX stuff is necessary - we just assume that
# we are running on a *NIX system because compiling under
# make.  Cygwin compiles use the UNIX utilities, not windows
utils_sources = \
  utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp \
  utils/unixutils/XSECURIResolverGenericUnix.cpp \
  utils/unixutils/XSECBinHTTPURIInputStream.cpp \
  utils/XSECBinTXFMInputStream.cpp \
  utils/XSECXPathNodeList.cpp \
  utils/XSECSafeBuffer.cpp \
  utils/XSECTXFMInputSource.cpp \
  utils/XSECDOMUtils.cpp \
  utils/XSECSafeBufferFormatter.cpp \
  utils/XSECSOAPRequestorSimple.cpp \
  utils/XSECNameSpaceExpander.cpp \
  utils/XSECPlatformUtils.cpp


# XML Encryption
xenc_sources = \
  xenc/impl/XENCCipherReferenceImpl.cpp \
  xenc/impl/XENCEncryptionMethodImpl.cpp \
  xenc/impl/XENCEncryptedKeyImpl.hpp \
  xenc/impl/XENCCipherValueImpl.cpp \
  xenc/impl/XENCCipherImpl.hpp \
  xenc/impl/XENCAlgorithmHandlerDefault.hpp \
  xenc/impl/XENCCipherDataImpl.hpp \
  xenc/impl/XENCEncryptionMethodImpl.hpp \
  xenc/impl/XENCAlgorithmHandlerDefault.cpp \
  xenc/impl/XENCEncryptedDataImpl.cpp \
  xenc/impl/XENCEncryptedTypeImpl.hpp \
  xenc/impl/XENCCipherDataImpl.cpp \
  xenc/impl/XENCEncryptedDataImpl.hpp \
  xenc/impl/XENCCipherValueImpl.hpp \
  xenc/impl/XENCEncryptedTypeImpl.cpp \
  xenc/impl/XENCCipherImpl.cpp \
  xenc/impl/XENCEncryptedKeyImpl.cpp \
  xenc/impl/XENCCipherReferenceImpl.hpp


# XML Key Management
xkms_sources = \
  xkms/XKMSConstants.cpp \
  xkms/impl/XKMSCompoundRequestImpl.cpp \
  xkms/impl/XKMSRevokeKeyBindingImpl.hpp \
  xkms/impl/XKMSRecoverRequestImpl.cpp \
  xkms/impl/XKMSRegisterResultImpl.cpp \
  xkms/impl/XKMSRecoverResultImpl.cpp \
  xkms/impl/XKMSValidateResultImpl.hpp \
  xkms/impl/XKMSRevokeResultImpl.hpp \
  xkms/impl/XKMSCompoundResultImpl.cpp \
  xkms/impl/XKMSRevokeKeyBindingImpl.cpp \
  xkms/impl/XKMSCompoundResultImpl.hpp \
  xkms/impl/XKMSUnverifiedKeyBindingImpl.hpp \
  xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp \
  xkms/impl/XKMSQueryKeyBindingImpl.hpp \
  xkms/impl/XKMSPrototypeKeyBindingImpl.cpp \
  xkms/impl/XKMSValidateResultImpl.cpp \
  xkms/impl/XKMSRSAKeyPairImpl.hpp \
  xkms/impl/XKMSAuthenticationImpl.cpp \
  xkms/impl/XKMSNotBoundAuthenticationImpl.hpp \
  xkms/impl/XKMSCompoundRequestImpl.hpp \
  xkms/impl/XKMSPendingRequestImpl.hpp \
  xkms/impl/XKMSStatusResultImpl.cpp \
  xkms/impl/XKMSStatusImpl.hpp \
  xkms/impl/XKMSRegisterRequestImpl.hpp \
  xkms/impl/XKMSReissueRequestImpl.cpp \
  xkms/impl/XKMSKeyBindingImpl.cpp \
  xkms/impl/XKMSUseKeyWithImpl.hpp \
  xkms/impl/XKMSRequestAbstractTypeImpl.cpp \
  xkms/impl/XKMSRespondWithImpl.cpp \
  xkms/impl/XKMSResponseMechanismImpl.hpp \
  xkms/impl/XKMSResultImpl.hpp \
  xkms/impl/XKMSReissueResultImpl.cpp \
  xkms/impl/XKMSAuthenticationImpl.hpp \
  xkms/impl/XKMSMessageAbstractTypeImpl.cpp \
  xkms/impl/XKMSRevokeResultImpl.cpp \
  xkms/impl/XKMSStatusResultImpl.hpp \
  xkms/impl/XKMSReissueKeyBindingImpl.hpp \
  xkms/impl/XKMSRespondWithImpl.hpp \
  xkms/impl/XKMSRevokeRequestImpl.cpp \
  xkms/impl/XKMSPendingRequestImpl.cpp \
  xkms/impl/XKMSRecoverResultImpl.hpp \
  xkms/impl/XKMSValidateRequestImpl.cpp \
  xkms/impl/XKMSStatusRequestImpl.hpp \
  xkms/impl/XKMSRecoverRequestImpl.hpp \
  xkms/impl/XKMSRecoverKeyBindingImpl.cpp \
  xkms/impl/XKMSRSAKeyPairImpl.cpp \
  xkms/impl/XKMSMessageAbstractTypeImpl.hpp \
  xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp \
  xkms/impl/XKMSValidityIntervalImpl.hpp \
  xkms/impl/XKMSLocateResultImpl.hpp \
  xkms/impl/XKMSLocateRequestImpl.cpp \
  xkms/impl/XKMSResultTypeImpl.cpp \
  xkms/impl/XKMSRecoverKeyBindingImpl.hpp \
  xkms/impl/XKMSResultImpl.cpp \
  xkms/impl/XKMSValidityIntervalImpl.cpp \
  xkms/impl/XKMSRegisterRequestImpl.cpp \
  xkms/impl/XKMSReissueResultImpl.hpp \
  xkms/impl/XKMSStatusImpl.cpp \
  xkms/impl/XKMSReissueRequestImpl.hpp \
  xkms/impl/XKMSStatusRequestImpl.cpp \
  xkms/impl/XKMSReissueKeyBindingImpl.cpp \
  xkms/impl/XKMSKeyBindingImpl.hpp \
  xkms/impl/XKMSValidateRequestImpl.hpp \
  xkms/impl/XKMSKeyBindingAbstractTypeImpl.hpp \
  xkms/impl/XKMSResultTypeImpl.hpp \
  xkms/impl/XKMSMessageFactoryImpl.cpp \
  xkms/impl/XKMSRevokeRequestImpl.hpp \
  xkms/impl/XKMSResponseMechanismImpl.cpp \
  xkms/impl/XKMSNotBoundAuthentication.cpp \
  xkms/impl/XKMSLocateRequestImpl.hpp \
  xkms/impl/XKMSLocateResultImpl.cpp \
  xkms/impl/XKMSRequestAbstractTypeImpl.hpp \
  xkms/impl/XKMSQueryKeyBindingImpl.cpp \
  xkms/impl/XKMSUseKeyWithImpl.cpp \
  xkms/impl/XKMSMessageFactoryImpl.hpp \
  xkms/impl/XKMSPrototypeKeyBindingImpl.hpp \
  xkms/impl/XKMSRegisterResultImpl.hpp


# Conditional crypto routines
openssl_sources = \
  enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp \
  enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp \
  enc/OpenSSL/OpenSSLCryptoHash.cpp \
  enc/OpenSSL/OpenSSLCryptoProvider.cpp \
  enc/OpenSSL/OpenSSLCryptoX509.cpp \
  enc/OpenSSL/OpenSSLCryptoBase64.cpp \
  enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp \
  enc/OpenSSL/OpenSSLCryptoKeyEC.cpp \
  enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp \
  enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp

nss_sources = \
  enc/NSS/NSSCryptoX509.cpp \
  enc/NSS/NSSCryptoHashHMAC.cpp \
  enc/NSS/NSSCryptoHash.cpp \
  enc/NSS/NSSCryptoKeyDSA.cpp \
  enc/NSS/NSSCryptoProvider.cpp \
  enc/NSS/NSSCryptoSymmetricKey.cpp \
  enc/NSS/NSSCryptoKeyRSA.cpp \
  enc/NSS/NSSCryptoKeyHMAC.cpp


#
# Now the library specific build items
#
libxml_security_c_la_LDFLAGS = -version-info 17:2:0
EXTRA_DIST = \
  utils/winutils/XSECURIResolverGenericWin32.cpp \
  utils/winutils/XSECSOAPRequestorSimpleWin32.cpp \
  utils/winutils/XSECBinHTTPURIInputStream.cpp \
  utils/winutils/XSECURIResolverGenericWin32.hpp \
  utils/winutils/XSECBinHTTPURIInputStream.hpp \
  enc/WinCAPI/WinCAPICryptoProvider.cpp \
  enc/WinCAPI/WinCAPICryptoKeyHMAC.hpp \
  enc/WinCAPI/WinCAPICryptoHash.cpp \
  enc/WinCAPI/WinCAPICryptoKeyDSA.cpp \
  enc/WinCAPI/WinCAPICryptoHashHMAC.hpp \
  enc/WinCAPI/WinCAPICryptoKeyDSA.hpp \
  enc/WinCAPI/WinCAPICryptoSymmetricKey.hpp \
  enc/WinCAPI/WinCAPICryptoX509.hpp \
  enc/WinCAPI/WinCAPICryptoKeyRSA.hpp \
  enc/WinCAPI/WinCAPICryptoX509.cpp \
  enc/WinCAPI/WinCAPICryptoHashHMAC.cpp \
  enc/WinCAPI/WinCAPICryptoHash.hpp \
  enc/WinCAPI/WinCAPICryptoKeyRSA.cpp \
  enc/WinCAPI/WinCAPICryptoProvider.hpp \
  enc/WinCAPI/WinCAPICryptoSymmetricKey.cpp \
  enc/WinCAPI/WinCAPICryptoKeyHMAC.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign xsec/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign xsec/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
libxml-security-c.la: $(libxml_security_c_la_OBJECTS) $(libxml_security_c_la_DEPENDENCIES) $(EXTRA_libxml_security_c_la_DEPENDENCIES) 
	$(libxml_security_c_la_LINK) -rpath $(libdir) $(libxml_security_c_la_OBJECTS) $(libxml_security_c_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
c14n$(EXEEXT): $(c14n_OBJECTS) $(c14n_DEPENDENCIES) $(EXTRA_c14n_DEPENDENCIES) 
	@rm -f c14n$(EXEEXT)
	$(CXXLINK) $(c14n_OBJECTS) $(c14n_LDADD) $(LIBS)
checksig$(EXEEXT): $(checksig_OBJECTS) $(checksig_DEPENDENCIES) $(EXTRA_checksig_DEPENDENCIES) 
	@rm -f checksig$(EXEEXT)
	$(CXXLINK) $(checksig_OBJECTS) $(checksig_LDADD) $(LIBS)
cipher$(EXEEXT): $(cipher_OBJECTS) $(cipher_DEPENDENCIES) $(EXTRA_cipher_DEPENDENCIES) 
	@rm -f cipher$(EXEEXT)
	$(CXXLINK) $(cipher_OBJECTS) $(cipher_LDADD) $(LIBS)
siginf$(EXEEXT): $(siginf_OBJECTS) $(siginf_DEPENDENCIES) $(EXTRA_siginf_DEPENDENCIES) 
	@rm -f siginf$(EXEEXT)
	$(CXXLINK) $(siginf_OBJECTS) $(siginf_LDADD) $(LIBS)
simpleDecrypt$(EXEEXT): $(simpleDecrypt_OBJECTS) $(simpleDecrypt_DEPENDENCIES) $(EXTRA_simpleDecrypt_DEPENDENCIES) 
	@rm -f simpleDecrypt$(EXEEXT)
	$(CXXLINK) $(simpleDecrypt_OBJECTS) $(simpleDecrypt_LDADD) $(LIBS)
simpleEncrypt$(EXEEXT): $(simpleEncrypt_OBJECTS) $(simpleEncrypt_DEPENDENCIES) $(EXTRA_simpleEncrypt_DEPENDENCIES) 
	@rm -f simpleEncrypt$(EXEEXT)
	$(CXXLINK) $(simpleEncrypt_OBJECTS) $(simpleEncrypt_LDADD) $(LIBS)
simpleHMAC$(EXEEXT): $(simpleHMAC_OBJECTS) $(simpleHMAC_DEPENDENCIES) $(EXTRA_simpleHMAC_DEPENDENCIES) 
	@rm -f simpleHMAC$(EXEEXT)
	$(CXXLINK) $(simpleHMAC_OBJECTS) $(simpleHMAC_LDADD) $(LIBS)
simpleValidate$(EXEEXT): $(simpleValidate_OBJECTS) $(simpleValidate_DEPENDENCIES) $(EXTRA_simpleValidate_DEPENDENCIES) 
	@rm -f simpleValidate$(EXEEXT)
	$(CXXLINK) $(simpleValidate_OBJECTS) $(simpleValidate_LDADD) $(LIBS)
templatesign$(EXEEXT): $(templatesign_OBJECTS) $(templatesign_DEPENDENCIES) $(EXTRA_templatesign_DEPENDENCIES) 
	@rm -f templatesign$(EXEEXT)
	$(CXXLINK) $(templatesign_OBJECTS) $(templatesign_LDADD) $(LIBS)
txfmout$(EXEEXT): $(txfmout_OBJECTS) $(txfmout_DEPENDENCIES) $(EXTRA_txfmout_DEPENDENCIES) 
	@rm -f txfmout$(EXEEXT)
	$(CXXLINK) $(txfmout_OBJECTS) $(txfmout_LDADD) $(LIBS)
xklient$(EXEEXT): $(xklient_OBJECTS) $(xklient_DEPENDENCIES) $(EXTRA_xklient_DEPENDENCIES) 
	@rm -f xklient$(EXEEXT)
	$(CXXLINK) $(xklient_OBJECTS) $(xklient_LDADD) $(LIBS)
xtest$(EXEEXT): $(xtest_OBJECTS) $(xtest_DEPENDENCIES) $(EXTRA_xtest_DEPENDENCIES) 
	@rm -f xtest$(EXEEXT)
	$(CXXLINK) $(xtest_OBJECTS) $(xtest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AnonymousResolver.Po
include ./$(DEPDIR)/DSIGAlgorithmHandlerDefault.Plo
include ./$(DEPDIR)/DSIGConstants.Plo
include ./$(DEPDIR)/DSIGKeyInfoDEREncoded.Plo
include ./$(DEPDIR)/DSIGKeyInfoExt.Plo
include ./$(DEPDIR)/DSIGKeyInfoList.Plo
include ./$(DEPDIR)/DSIGKeyInfoMgmtData.Plo
include ./$(DEPDIR)/DSIGKeyInfoName.Plo
include ./$(DEPDIR)/DSIGKeyInfoPGPData.Plo
include ./$(DEPDIR)/DSIGKeyInfoSPKIData.Plo
include ./$(DEPDIR)/DSIGKeyInfoValue.Plo
include ./$(DEPDIR)/DSIGKeyInfoX509.Plo
include ./$(DEPDIR)/DSIGObject.Plo
include ./$(DEPDIR)/DSIGReference.Plo
include ./$(DEPDIR)/DSIGReferenceList.Plo
include ./$(DEPDIR)/DSIGSignature.Plo
include ./$(DEPDIR)/DSIGSignedInfo.Plo
include ./$(DEPDIR)/DSIGTransform.Plo
include ./$(DEPDIR)/DSIGTransformBase64.Plo
include ./$(DEPDIR)/DSIGTransformC14n.Plo
include ./$(DEPDIR)/DSIGTransformEnvelope.Plo
include ./$(DEPDIR)/DSIGTransformList.Plo
include ./$(DEPDIR)/DSIGTransformXPath.Plo
include ./$(DEPDIR)/DSIGTransformXPathFilter.Plo
include ./$(DEPDIR)/DSIGTransformXSL.Plo
include ./$(DEPDIR)/DSIGXPathFilterExpr.Plo
include ./$(DEPDIR)/DSIGXPathHere.Plo
include ./$(DEPDIR)/IOStreamOutputter.Po
include ./$(DEPDIR)/InteropResolver.Po
include ./$(DEPDIR)/NSSCryptoHash.Plo
include ./$(DEPDIR)/NSSCryptoHashHMAC.Plo
include ./$(DEPDIR)/NSSCryptoKeyDSA.Plo
include ./$(DEPDIR)/NSSCryptoKeyHMAC.Plo
include ./$(DEPDIR)/NSSCryptoKeyRSA.Plo
include ./$(DEPDIR)/NSSCryptoProvider.Plo
include ./$(DEPDIR)/NSSCryptoSymmetricKey.Plo
include ./$(DEPDIR)/NSSCryptoX509.Plo
include ./$(DEPDIR)/OpenSSLCryptoBase64.Plo
include ./$(DEPDIR)/OpenSSLCryptoHash.Plo
include ./$(DEPDIR)/OpenSSLCryptoHashHMAC.Plo
include ./$(DEPDIR)/OpenSSLCryptoKeyDSA.Plo
include ./$(DEPDIR)/OpenSSLCryptoKeyEC.Plo
include ./$(DEPDIR)/OpenSSLCryptoKeyHMAC.Plo
include ./$(DEPDIR)/OpenSSLCryptoKeyRSA.Plo
include ./$(DEPDIR)/OpenSSLCryptoProvider.Plo
include ./$(DEPDIR)/OpenSSLCryptoSymmetricKey.Plo
include ./$(DEPDIR)/OpenSSLCryptoX509.Plo
include ./$(DEPDIR)/TXFMBase.Plo
include ./$(DEPDIR)/TXFMBase64.Plo
include ./$(DEPDIR)/TXFMC14n.Plo
include ./$(DEPDIR)/TXFMChain.Plo
include ./$(DEPDIR)/TXFMCipher.Plo
include ./$(DEPDIR)/TXFMConcatChains.Plo
include ./$(DEPDIR)/TXFMDocObject.Plo
include ./$(DEPDIR)/TXFMEnvelope.Plo
include ./$(DEPDIR)/TXFMMD5.Plo
include ./$(DEPDIR)/TXFMOutputFile.Plo
include ./$(DEPDIR)/TXFMParser.Plo
include ./$(DEPDIR)/TXFMSB.Plo
include ./$(DEPDIR)/TXFMSHA1.Plo
include ./$(DEPDIR)/TXFMURL.Plo
include ./$(DEPDIR)/TXFMXPath.Plo
include ./$(DEPDIR)/TXFMXPathFilter.Plo
include ./$(DEPDIR)/TXFMXSL.Plo
include ./$(DEPDIR)/XENCAlgorithmHandlerDefault.Plo
include ./$(DEPDIR)/XENCCipherDataImpl.Plo
include ./$(DEPDIR)/XENCCipherImpl.Plo
include ./$(DEPDIR)/XENCCipherReferenceImpl.Plo
include ./$(DEPDIR)/XENCCipherValueImpl.Plo
include ./$(DEPDIR)/XENCEncryptedDataImpl.Plo
include ./$(DEPDIR)/XENCEncryptedKeyImpl.Plo
include ./$(DEPDIR)/XENCEncryptedTypeImpl.Plo
include ./$(DEPDIR)/XENCEncryptionMethodImpl.Plo
include ./$(DEPDIR)/XKMSAuthenticationImpl.Plo
include ./$(DEPDIR)/XKMSCompoundRequestImpl.Plo
include ./$(DEPDIR)/XKMSCompoundResultImpl.Plo
include ./$(DEPDIR)/XKMSConstants.Plo
include ./$(DEPDIR)/XKMSKeyBindingAbstractTypeImpl.Plo
include ./$(DEPDIR)/XKMSKeyBindingImpl.Plo
include ./$(DEPDIR)/XKMSLocateRequestImpl.Plo
include ./$(DEPDIR)/XKMSLocateResultImpl.Plo
include ./$(DEPDIR)/XKMSMessageAbstractTypeImpl.Plo
include ./$(DEPDIR)/XKMSMessageFactoryImpl.Plo
include ./$(DEPDIR)/XKMSNotBoundAuthentication.Plo
include ./$(DEPDIR)/XKMSPendingRequestImpl.Plo
include ./$(DEPDIR)/XKMSPrototypeKeyBindingImpl.Plo
include ./$(DEPDIR)/XKMSQueryKeyBindingImpl.Plo
include ./$(DEPDIR)/XKMSRSAKeyPairImpl.Plo
include ./$(DEPDIR)/XKMSRecoverKeyBindingImpl.Plo
include ./$(DEPDIR)/XKMSRecoverRequestImpl.Plo
include ./$(DEPDIR)/XKMSRecoverResultImpl.Plo
include ./$(DEPDIR)/XKMSRegisterRequestImpl.Plo
include ./$(DEPDIR)/XKMSRegisterResultImpl.Plo
include ./$(DEPDIR)/XKMSReissueKeyBindingImpl.Plo
include ./$(DEPDIR)/XKMSReissueRequestImpl.Plo
include ./$(DEPDIR)/XKMSReissueResultImpl.Plo
include ./$(DEPDIR)/XKMSRequestAbstractTypeImpl.Plo
include ./$(DEPDIR)/XKMSRespondWithImpl.Plo
include ./$(DEPDIR)/XKMSResponseMechanismImpl.Plo
include ./$(DEPDIR)/XKMSResultImpl.Plo
include ./$(DEPDIR)/XKMSResultTypeImpl.Plo
include ./$(DEPDIR)/XKMSRevokeKeyBindingImpl.Plo
include ./$(DEPDIR)/XKMSRevokeRequestImpl.Plo
include ./$(DEPDIR)/XKMSRevokeResultImpl.Plo
include ./$(DEPDIR)/XKMSStatusImpl.Plo
include ./$(DEPDIR)/XKMSStatusRequestImpl.Plo
include ./$(DEPDIR)/XKMSStatusResultImpl.Plo
include ./$(DEPDIR)/XKMSUnverifiedKeyBindingImpl.Plo
include ./$(DEPDIR)/XKMSUseKeyWithImpl.Plo
include ./$(DEPDIR)/XKMSValidateRequestImpl.Plo
include ./$(DEPDIR)/XKMSValidateResultImpl.Plo
include ./$(DEPDIR)/XKMSValidityIntervalImpl.Plo
include ./$(DEPDIR)/XSCryptCryptoBase64.Plo
include ./$(DEPDIR)/XSECAlgorithmMapper.Plo
include ./$(DEPDIR)/XSECBinHTTPURIInputStream.Plo
include ./$(DEPDIR)/XSECBinTXFMInputStream.Plo
include ./$(DEPDIR)/XSECC14n20010315.Plo
include ./$(DEPDIR)/XSECCanon.Plo
include ./$(DEPDIR)/XSECCryptoBase64.Plo
include ./$(DEPDIR)/XSECCryptoException.Plo
include ./$(DEPDIR)/XSECCryptoProvider.Plo
include ./$(DEPDIR)/XSECCryptoUtils.Plo
include ./$(DEPDIR)/XSECCryptoX509.Plo
include ./$(DEPDIR)/XSECDOMUtils.Plo
include ./$(DEPDIR)/XSECEnv.Plo
include ./$(DEPDIR)/XSECError.Plo
include ./$(DEPDIR)/XSECException.Plo
include ./$(DEPDIR)/XSECKeyInfoResolverDefault.Plo
include ./$(DEPDIR)/XSECNameSpaceExpander.Plo
include ./$(DEPDIR)/XSECPlatformUtils.Plo
include ./$(DEPDIR)/XSECProvider.Plo
include ./$(DEPDIR)/XSECSOAPRequestorSimple.Plo
include ./$(DEPDIR)/XSECSOAPRequestorSimpleUnix.Plo
include ./$(DEPDIR)/XSECSafeBuffer.Plo
include ./$(DEPDIR)/XSECSafeBufferFormatter.Plo
include ./$(DEPDIR)/XSECTXFMInputSource.Plo
include ./$(DEPDIR)/XSECURIResolverGenericUnix.Plo
include ./$(DEPDIR)/XSECURIResolverXerces.Plo
include ./$(DEPDIR)/XSECXMLNSStack.Plo
include ./$(DEPDIR)/XSECXPathNodeList.Plo
include ./$(DEPDIR)/XencInteropResolver.Po
include ./$(DEPDIR)/c14n.Po
include ./$(DEPDIR)/checksig.Po
include ./$(DEPDIR)/cipher.Po
include ./$(DEPDIR)/siginf.Po
include ./$(DEPDIR)/simpleDecrypt.Po
include ./$(DEPDIR)/simpleEncrypt.Po
include ./$(DEPDIR)/simpleHMAC.Po
include ./$(DEPDIR)/simpleValidate.Po
include ./$(DEPDIR)/templatesign.Po
include ./$(DEPDIR)/txfmout.Po
include ./$(DEPDIR)/xklient.Po
include ./$(DEPDIR)/xtest.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

XSECC14n20010315.lo: canon/XSECC14n20010315.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECC14n20010315.lo -MD -MP -MF $(DEPDIR)/XSECC14n20010315.Tpo -c -o XSECC14n20010315.lo `test -f 'canon/XSECC14n20010315.cpp' || echo '$(srcdir)/'`canon/XSECC14n20010315.cpp
	$(am__mv) $(DEPDIR)/XSECC14n20010315.Tpo $(DEPDIR)/XSECC14n20010315.Plo
#	source='canon/XSECC14n20010315.cpp' object='XSECC14n20010315.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECC14n20010315.lo `test -f 'canon/XSECC14n20010315.cpp' || echo '$(srcdir)/'`canon/XSECC14n20010315.cpp

XSECXMLNSStack.lo: canon/XSECXMLNSStack.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECXMLNSStack.lo -MD -MP -MF $(DEPDIR)/XSECXMLNSStack.Tpo -c -o XSECXMLNSStack.lo `test -f 'canon/XSECXMLNSStack.cpp' || echo '$(srcdir)/'`canon/XSECXMLNSStack.cpp
	$(am__mv) $(DEPDIR)/XSECXMLNSStack.Tpo $(DEPDIR)/XSECXMLNSStack.Plo
#	source='canon/XSECXMLNSStack.cpp' object='XSECXMLNSStack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECXMLNSStack.lo `test -f 'canon/XSECXMLNSStack.cpp' || echo '$(srcdir)/'`canon/XSECXMLNSStack.cpp

XSECCanon.lo: canon/XSECCanon.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECCanon.lo -MD -MP -MF $(DEPDIR)/XSECCanon.Tpo -c -o XSECCanon.lo `test -f 'canon/XSECCanon.cpp' || echo '$(srcdir)/'`canon/XSECCanon.cpp
	$(am__mv) $(DEPDIR)/XSECCanon.Tpo $(DEPDIR)/XSECCanon.Plo
#	source='canon/XSECCanon.cpp' object='XSECCanon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECCanon.lo `test -f 'canon/XSECCanon.cpp' || echo '$(srcdir)/'`canon/XSECCanon.cpp

DSIGKeyInfoPGPData.lo: dsig/DSIGKeyInfoPGPData.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoPGPData.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoPGPData.Tpo -c -o DSIGKeyInfoPGPData.lo `test -f 'dsig/DSIGKeyInfoPGPData.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoPGPData.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoPGPData.Tpo $(DEPDIR)/DSIGKeyInfoPGPData.Plo
#	source='dsig/DSIGKeyInfoPGPData.cpp' object='DSIGKeyInfoPGPData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoPGPData.lo `test -f 'dsig/DSIGKeyInfoPGPData.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoPGPData.cpp

DSIGReferenceList.lo: dsig/DSIGReferenceList.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGReferenceList.lo -MD -MP -MF $(DEPDIR)/DSIGReferenceList.Tpo -c -o DSIGReferenceList.lo `test -f 'dsig/DSIGReferenceList.cpp' || echo '$(srcdir)/'`dsig/DSIGReferenceList.cpp
	$(am__mv) $(DEPDIR)/DSIGReferenceList.Tpo $(DEPDIR)/DSIGReferenceList.Plo
#	source='dsig/DSIGReferenceList.cpp' object='DSIGReferenceList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGReferenceList.lo `test -f 'dsig/DSIGReferenceList.cpp' || echo '$(srcdir)/'`dsig/DSIGReferenceList.cpp

DSIGKeyInfoValue.lo: dsig/DSIGKeyInfoValue.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoValue.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoValue.Tpo -c -o DSIGKeyInfoValue.lo `test -f 'dsig/DSIGKeyInfoValue.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoValue.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoValue.Tpo $(DEPDIR)/DSIGKeyInfoValue.Plo
#	source='dsig/DSIGKeyInfoValue.cpp' object='DSIGKeyInfoValue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoValue.lo `test -f 'dsig/DSIGKeyInfoValue.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoValue.cpp

DSIGKeyInfoDEREncoded.lo: dsig/DSIGKeyInfoDEREncoded.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoDEREncoded.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoDEREncoded.Tpo -c -o DSIGKeyInfoDEREncoded.lo `test -f 'dsig/DSIGKeyInfoDEREncoded.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoDEREncoded.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoDEREncoded.Tpo $(DEPDIR)/DSIGKeyInfoDEREncoded.Plo
#	source='dsig/DSIGKeyInfoDEREncoded.cpp' object='DSIGKeyInfoDEREncoded.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoDEREncoded.lo `test -f 'dsig/DSIGKeyInfoDEREncoded.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoDEREncoded.cpp

DSIGXPathHere.lo: dsig/DSIGXPathHere.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGXPathHere.lo -MD -MP -MF $(DEPDIR)/DSIGXPathHere.Tpo -c -o DSIGXPathHere.lo `test -f 'dsig/DSIGXPathHere.cpp' || echo '$(srcdir)/'`dsig/DSIGXPathHere.cpp
	$(am__mv) $(DEPDIR)/DSIGXPathHere.Tpo $(DEPDIR)/DSIGXPathHere.Plo
#	source='dsig/DSIGXPathHere.cpp' object='DSIGXPathHere.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGXPathHere.lo `test -f 'dsig/DSIGXPathHere.cpp' || echo '$(srcdir)/'`dsig/DSIGXPathHere.cpp

DSIGAlgorithmHandlerDefault.lo: dsig/DSIGAlgorithmHandlerDefault.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGAlgorithmHandlerDefault.lo -MD -MP -MF $(DEPDIR)/DSIGAlgorithmHandlerDefault.Tpo -c -o DSIGAlgorithmHandlerDefault.lo `test -f 'dsig/DSIGAlgorithmHandlerDefault.cpp' || echo '$(srcdir)/'`dsig/DSIGAlgorithmHandlerDefault.cpp
	$(am__mv) $(DEPDIR)/DSIGAlgorithmHandlerDefault.Tpo $(DEPDIR)/DSIGAlgorithmHandlerDefault.Plo
#	source='dsig/DSIGAlgorithmHandlerDefault.cpp' object='DSIGAlgorithmHandlerDefault.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGAlgorithmHandlerDefault.lo `test -f 'dsig/DSIGAlgorithmHandlerDefault.cpp' || echo '$(srcdir)/'`dsig/DSIGAlgorithmHandlerDefault.cpp

DSIGXPathFilterExpr.lo: dsig/DSIGXPathFilterExpr.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGXPathFilterExpr.lo -MD -MP -MF $(DEPDIR)/DSIGXPathFilterExpr.Tpo -c -o DSIGXPathFilterExpr.lo `test -f 'dsig/DSIGXPathFilterExpr.cpp' || echo '$(srcdir)/'`dsig/DSIGXPathFilterExpr.cpp
	$(am__mv) $(DEPDIR)/DSIGXPathFilterExpr.Tpo $(DEPDIR)/DSIGXPathFilterExpr.Plo
#	source='dsig/DSIGXPathFilterExpr.cpp' object='DSIGXPathFilterExpr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGXPathFilterExpr.lo `test -f 'dsig/DSIGXPathFilterExpr.cpp' || echo '$(srcdir)/'`dsig/DSIGXPathFilterExpr.cpp

DSIGKeyInfoMgmtData.lo: dsig/DSIGKeyInfoMgmtData.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoMgmtData.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoMgmtData.Tpo -c -o DSIGKeyInfoMgmtData.lo `test -f 'dsig/DSIGKeyInfoMgmtData.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoMgmtData.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoMgmtData.Tpo $(DEPDIR)/DSIGKeyInfoMgmtData.Plo
#	source='dsig/DSIGKeyInfoMgmtData.cpp' object='DSIGKeyInfoMgmtData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoMgmtData.lo `test -f 'dsig/DSIGKeyInfoMgmtData.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoMgmtData.cpp

DSIGTransformXPathFilter.lo: dsig/DSIGTransformXPathFilter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransformXPathFilter.lo -MD -MP -MF $(DEPDIR)/DSIGTransformXPathFilter.Tpo -c -o DSIGTransformXPathFilter.lo `test -f 'dsig/DSIGTransformXPathFilter.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformXPathFilter.cpp
	$(am__mv) $(DEPDIR)/DSIGTransformXPathFilter.Tpo $(DEPDIR)/DSIGTransformXPathFilter.Plo
#	source='dsig/DSIGTransformXPathFilter.cpp' object='DSIGTransformXPathFilter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransformXPathFilter.lo `test -f 'dsig/DSIGTransformXPathFilter.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformXPathFilter.cpp

DSIGSignedInfo.lo: dsig/DSIGSignedInfo.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGSignedInfo.lo -MD -MP -MF $(DEPDIR)/DSIGSignedInfo.Tpo -c -o DSIGSignedInfo.lo `test -f 'dsig/DSIGSignedInfo.cpp' || echo '$(srcdir)/'`dsig/DSIGSignedInfo.cpp
	$(am__mv) $(DEPDIR)/DSIGSignedInfo.Tpo $(DEPDIR)/DSIGSignedInfo.Plo
#	source='dsig/DSIGSignedInfo.cpp' object='DSIGSignedInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGSignedInfo.lo `test -f 'dsig/DSIGSignedInfo.cpp' || echo '$(srcdir)/'`dsig/DSIGSignedInfo.cpp

DSIGKeyInfoList.lo: dsig/DSIGKeyInfoList.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoList.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoList.Tpo -c -o DSIGKeyInfoList.lo `test -f 'dsig/DSIGKeyInfoList.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoList.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoList.Tpo $(DEPDIR)/DSIGKeyInfoList.Plo
#	source='dsig/DSIGKeyInfoList.cpp' object='DSIGKeyInfoList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoList.lo `test -f 'dsig/DSIGKeyInfoList.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoList.cpp

DSIGConstants.lo: dsig/DSIGConstants.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGConstants.lo -MD -MP -MF $(DEPDIR)/DSIGConstants.Tpo -c -o DSIGConstants.lo `test -f 'dsig/DSIGConstants.cpp' || echo '$(srcdir)/'`dsig/DSIGConstants.cpp
	$(am__mv) $(DEPDIR)/DSIGConstants.Tpo $(DEPDIR)/DSIGConstants.Plo
#	source='dsig/DSIGConstants.cpp' object='DSIGConstants.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGConstants.lo `test -f 'dsig/DSIGConstants.cpp' || echo '$(srcdir)/'`dsig/DSIGConstants.cpp

DSIGSignature.lo: dsig/DSIGSignature.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGSignature.lo -MD -MP -MF $(DEPDIR)/DSIGSignature.Tpo -c -o DSIGSignature.lo `test -f 'dsig/DSIGSignature.cpp' || echo '$(srcdir)/'`dsig/DSIGSignature.cpp
	$(am__mv) $(DEPDIR)/DSIGSignature.Tpo $(DEPDIR)/DSIGSignature.Plo
#	source='dsig/DSIGSignature.cpp' object='DSIGSignature.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGSignature.lo `test -f 'dsig/DSIGSignature.cpp' || echo '$(srcdir)/'`dsig/DSIGSignature.cpp

DSIGTransformXSL.lo: dsig/DSIGTransformXSL.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransformXSL.lo -MD -MP -MF $(DEPDIR)/DSIGTransformXSL.Tpo -c -o DSIGTransformXSL.lo `test -f 'dsig/DSIGTransformXSL.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformXSL.cpp
	$(am__mv) $(DEPDIR)/DSIGTransformXSL.Tpo $(DEPDIR)/DSIGTransformXSL.Plo
#	source='dsig/DSIGTransformXSL.cpp' object='DSIGTransformXSL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransformXSL.lo `test -f 'dsig/DSIGTransformXSL.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformXSL.cpp

DSIGObject.lo: dsig/DSIGObject.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGObject.lo -MD -MP -MF $(DEPDIR)/DSIGObject.Tpo -c -o DSIGObject.lo `test -f 'dsig/DSIGObject.cpp' || echo '$(srcdir)/'`dsig/DSIGObject.cpp
	$(am__mv) $(DEPDIR)/DSIGObject.Tpo $(DEPDIR)/DSIGObject.Plo
#	source='dsig/DSIGObject.cpp' object='DSIGObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGObject.lo `test -f 'dsig/DSIGObject.cpp' || echo '$(srcdir)/'`dsig/DSIGObject.cpp

DSIGTransformXPath.lo: dsig/DSIGTransformXPath.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransformXPath.lo -MD -MP -MF $(DEPDIR)/DSIGTransformXPath.Tpo -c -o DSIGTransformXPath.lo `test -f 'dsig/DSIGTransformXPath.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformXPath.cpp
	$(am__mv) $(DEPDIR)/DSIGTransformXPath.Tpo $(DEPDIR)/DSIGTransformXPath.Plo
#	source='dsig/DSIGTransformXPath.cpp' object='DSIGTransformXPath.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransformXPath.lo `test -f 'dsig/DSIGTransformXPath.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformXPath.cpp

DSIGTransformEnvelope.lo: dsig/DSIGTransformEnvelope.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransformEnvelope.lo -MD -MP -MF $(DEPDIR)/DSIGTransformEnvelope.Tpo -c -o DSIGTransformEnvelope.lo `test -f 'dsig/DSIGTransformEnvelope.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformEnvelope.cpp
	$(am__mv) $(DEPDIR)/DSIGTransformEnvelope.Tpo $(DEPDIR)/DSIGTransformEnvelope.Plo
#	source='dsig/DSIGTransformEnvelope.cpp' object='DSIGTransformEnvelope.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransformEnvelope.lo `test -f 'dsig/DSIGTransformEnvelope.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformEnvelope.cpp

DSIGKeyInfoName.lo: dsig/DSIGKeyInfoName.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoName.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoName.Tpo -c -o DSIGKeyInfoName.lo `test -f 'dsig/DSIGKeyInfoName.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoName.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoName.Tpo $(DEPDIR)/DSIGKeyInfoName.Plo
#	source='dsig/DSIGKeyInfoName.cpp' object='DSIGKeyInfoName.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoName.lo `test -f 'dsig/DSIGKeyInfoName.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoName.cpp

DSIGTransformBase64.lo: dsig/DSIGTransformBase64.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransformBase64.lo -MD -MP -MF $(DEPDIR)/DSIGTransformBase64.Tpo -c -o DSIGTransformBase64.lo `test -f 'dsig/DSIGTransformBase64.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformBase64.cpp
	$(am__mv) $(DEPDIR)/DSIGTransformBase64.Tpo $(DEPDIR)/DSIGTransformBase64.Plo
#	source='dsig/DSIGTransformBase64.cpp' object='DSIGTransformBase64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransformBase64.lo `test -f 'dsig/DSIGTransformBase64.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformBase64.cpp

DSIGReference.lo: dsig/DSIGReference.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGReference.lo -MD -MP -MF $(DEPDIR)/DSIGReference.Tpo -c -o DSIGReference.lo `test -f 'dsig/DSIGReference.cpp' || echo '$(srcdir)/'`dsig/DSIGReference.cpp
	$(am__mv) $(DEPDIR)/DSIGReference.Tpo $(DEPDIR)/DSIGReference.Plo
#	source='dsig/DSIGReference.cpp' object='DSIGReference.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGReference.lo `test -f 'dsig/DSIGReference.cpp' || echo '$(srcdir)/'`dsig/DSIGReference.cpp

DSIGKeyInfoSPKIData.lo: dsig/DSIGKeyInfoSPKIData.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoSPKIData.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoSPKIData.Tpo -c -o DSIGKeyInfoSPKIData.lo `test -f 'dsig/DSIGKeyInfoSPKIData.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoSPKIData.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoSPKIData.Tpo $(DEPDIR)/DSIGKeyInfoSPKIData.Plo
#	source='dsig/DSIGKeyInfoSPKIData.cpp' object='DSIGKeyInfoSPKIData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoSPKIData.lo `test -f 'dsig/DSIGKeyInfoSPKIData.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoSPKIData.cpp

DSIGTransformList.lo: dsig/DSIGTransformList.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransformList.lo -MD -MP -MF $(DEPDIR)/DSIGTransformList.Tpo -c -o DSIGTransformList.lo `test -f 'dsig/DSIGTransformList.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformList.cpp
	$(am__mv) $(DEPDIR)/DSIGTransformList.Tpo $(DEPDIR)/DSIGTransformList.Plo
#	source='dsig/DSIGTransformList.cpp' object='DSIGTransformList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransformList.lo `test -f 'dsig/DSIGTransformList.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformList.cpp

DSIGKeyInfoX509.lo: dsig/DSIGKeyInfoX509.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoX509.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoX509.Tpo -c -o DSIGKeyInfoX509.lo `test -f 'dsig/DSIGKeyInfoX509.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoX509.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoX509.Tpo $(DEPDIR)/DSIGKeyInfoX509.Plo
#	source='dsig/DSIGKeyInfoX509.cpp' object='DSIGKeyInfoX509.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoX509.lo `test -f 'dsig/DSIGKeyInfoX509.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoX509.cpp

DSIGKeyInfoExt.lo: dsig/DSIGKeyInfoExt.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGKeyInfoExt.lo -MD -MP -MF $(DEPDIR)/DSIGKeyInfoExt.Tpo -c -o DSIGKeyInfoExt.lo `test -f 'dsig/DSIGKeyInfoExt.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoExt.cpp
	$(am__mv) $(DEPDIR)/DSIGKeyInfoExt.Tpo $(DEPDIR)/DSIGKeyInfoExt.Plo
#	source='dsig/DSIGKeyInfoExt.cpp' object='DSIGKeyInfoExt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGKeyInfoExt.lo `test -f 'dsig/DSIGKeyInfoExt.cpp' || echo '$(srcdir)/'`dsig/DSIGKeyInfoExt.cpp

DSIGTransform.lo: dsig/DSIGTransform.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransform.lo -MD -MP -MF $(DEPDIR)/DSIGTransform.Tpo -c -o DSIGTransform.lo `test -f 'dsig/DSIGTransform.cpp' || echo '$(srcdir)/'`dsig/DSIGTransform.cpp
	$(am__mv) $(DEPDIR)/DSIGTransform.Tpo $(DEPDIR)/DSIGTransform.Plo
#	source='dsig/DSIGTransform.cpp' object='DSIGTransform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransform.lo `test -f 'dsig/DSIGTransform.cpp' || echo '$(srcdir)/'`dsig/DSIGTransform.cpp

DSIGTransformC14n.lo: dsig/DSIGTransformC14n.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSIGTransformC14n.lo -MD -MP -MF $(DEPDIR)/DSIGTransformC14n.Tpo -c -o DSIGTransformC14n.lo `test -f 'dsig/DSIGTransformC14n.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformC14n.cpp
	$(am__mv) $(DEPDIR)/DSIGTransformC14n.Tpo $(DEPDIR)/DSIGTransformC14n.Plo
#	source='dsig/DSIGTransformC14n.cpp' object='DSIGTransformC14n.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSIGTransformC14n.lo `test -f 'dsig/DSIGTransformC14n.cpp' || echo '$(srcdir)/'`dsig/DSIGTransformC14n.cpp

XSECCryptoX509.lo: enc/XSECCryptoX509.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECCryptoX509.lo -MD -MP -MF $(DEPDIR)/XSECCryptoX509.Tpo -c -o XSECCryptoX509.lo `test -f 'enc/XSECCryptoX509.cpp' || echo '$(srcdir)/'`enc/XSECCryptoX509.cpp
	$(am__mv) $(DEPDIR)/XSECCryptoX509.Tpo $(DEPDIR)/XSECCryptoX509.Plo
#	source='enc/XSECCryptoX509.cpp' object='XSECCryptoX509.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECCryptoX509.lo `test -f 'enc/XSECCryptoX509.cpp' || echo '$(srcdir)/'`enc/XSECCryptoX509.cpp

XSECKeyInfoResolverDefault.lo: enc/XSECKeyInfoResolverDefault.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECKeyInfoResolverDefault.lo -MD -MP -MF $(DEPDIR)/XSECKeyInfoResolverDefault.Tpo -c -o XSECKeyInfoResolverDefault.lo `test -f 'enc/XSECKeyInfoResolverDefault.cpp' || echo '$(srcdir)/'`enc/XSECKeyInfoResolverDefault.cpp
	$(am__mv) $(DEPDIR)/XSECKeyInfoResolverDefault.Tpo $(DEPDIR)/XSECKeyInfoResolverDefault.Plo
#	source='enc/XSECKeyInfoResolverDefault.cpp' object='XSECKeyInfoResolverDefault.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECKeyInfoResolverDefault.lo `test -f 'enc/XSECKeyInfoResolverDefault.cpp' || echo '$(srcdir)/'`enc/XSECKeyInfoResolverDefault.cpp

XSECCryptoUtils.lo: enc/XSECCryptoUtils.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECCryptoUtils.lo -MD -MP -MF $(DEPDIR)/XSECCryptoUtils.Tpo -c -o XSECCryptoUtils.lo `test -f 'enc/XSECCryptoUtils.cpp' || echo '$(srcdir)/'`enc/XSECCryptoUtils.cpp
	$(am__mv) $(DEPDIR)/XSECCryptoUtils.Tpo $(DEPDIR)/XSECCryptoUtils.Plo
#	source='enc/XSECCryptoUtils.cpp' object='XSECCryptoUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECCryptoUtils.lo `test -f 'enc/XSECCryptoUtils.cpp' || echo '$(srcdir)/'`enc/XSECCryptoUtils.cpp

XSECCryptoBase64.lo: enc/XSECCryptoBase64.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECCryptoBase64.lo -MD -MP -MF $(DEPDIR)/XSECCryptoBase64.Tpo -c -o XSECCryptoBase64.lo `test -f 'enc/XSECCryptoBase64.cpp' || echo '$(srcdir)/'`enc/XSECCryptoBase64.cpp
	$(am__mv) $(DEPDIR)/XSECCryptoBase64.Tpo $(DEPDIR)/XSECCryptoBase64.Plo
#	source='enc/XSECCryptoBase64.cpp' object='XSECCryptoBase64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECCryptoBase64.lo `test -f 'enc/XSECCryptoBase64.cpp' || echo '$(srcdir)/'`enc/XSECCryptoBase64.cpp

XSCryptCryptoBase64.lo: enc/XSCrypt/XSCryptCryptoBase64.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSCryptCryptoBase64.lo -MD -MP -MF $(DEPDIR)/XSCryptCryptoBase64.Tpo -c -o XSCryptCryptoBase64.lo `test -f 'enc/XSCrypt/XSCryptCryptoBase64.cpp' || echo '$(srcdir)/'`enc/XSCrypt/XSCryptCryptoBase64.cpp
	$(am__mv) $(DEPDIR)/XSCryptCryptoBase64.Tpo $(DEPDIR)/XSCryptCryptoBase64.Plo
#	source='enc/XSCrypt/XSCryptCryptoBase64.cpp' object='XSCryptCryptoBase64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSCryptCryptoBase64.lo `test -f 'enc/XSCrypt/XSCryptCryptoBase64.cpp' || echo '$(srcdir)/'`enc/XSCrypt/XSCryptCryptoBase64.cpp

XSECCryptoProvider.lo: enc/XSECCryptoProvider.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECCryptoProvider.lo -MD -MP -MF $(DEPDIR)/XSECCryptoProvider.Tpo -c -o XSECCryptoProvider.lo `test -f 'enc/XSECCryptoProvider.cpp' || echo '$(srcdir)/'`enc/XSECCryptoProvider.cpp
	$(am__mv) $(DEPDIR)/XSECCryptoProvider.Tpo $(DEPDIR)/XSECCryptoProvider.Plo
#	source='enc/XSECCryptoProvider.cpp' object='XSECCryptoProvider.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECCryptoProvider.lo `test -f 'enc/XSECCryptoProvider.cpp' || echo '$(srcdir)/'`enc/XSECCryptoProvider.cpp

XSECCryptoException.lo: enc/XSECCryptoException.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECCryptoException.lo -MD -MP -MF $(DEPDIR)/XSECCryptoException.Tpo -c -o XSECCryptoException.lo `test -f 'enc/XSECCryptoException.cpp' || echo '$(srcdir)/'`enc/XSECCryptoException.cpp
	$(am__mv) $(DEPDIR)/XSECCryptoException.Tpo $(DEPDIR)/XSECCryptoException.Plo
#	source='enc/XSECCryptoException.cpp' object='XSECCryptoException.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECCryptoException.lo `test -f 'enc/XSECCryptoException.cpp' || echo '$(srcdir)/'`enc/XSECCryptoException.cpp

XSECError.lo: framework/XSECError.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECError.lo -MD -MP -MF $(DEPDIR)/XSECError.Tpo -c -o XSECError.lo `test -f 'framework/XSECError.cpp' || echo '$(srcdir)/'`framework/XSECError.cpp
	$(am__mv) $(DEPDIR)/XSECError.Tpo $(DEPDIR)/XSECError.Plo
#	source='framework/XSECError.cpp' object='XSECError.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECError.lo `test -f 'framework/XSECError.cpp' || echo '$(srcdir)/'`framework/XSECError.cpp

XSECAlgorithmMapper.lo: framework/XSECAlgorithmMapper.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECAlgorithmMapper.lo -MD -MP -MF $(DEPDIR)/XSECAlgorithmMapper.Tpo -c -o XSECAlgorithmMapper.lo `test -f 'framework/XSECAlgorithmMapper.cpp' || echo '$(srcdir)/'`framework/XSECAlgorithmMapper.cpp
	$(am__mv) $(DEPDIR)/XSECAlgorithmMapper.Tpo $(DEPDIR)/XSECAlgorithmMapper.Plo
#	source='framework/XSECAlgorithmMapper.cpp' object='XSECAlgorithmMapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECAlgorithmMapper.lo `test -f 'framework/XSECAlgorithmMapper.cpp' || echo '$(srcdir)/'`framework/XSECAlgorithmMapper.cpp

XSECEnv.lo: framework/XSECEnv.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECEnv.lo -MD -MP -MF $(DEPDIR)/XSECEnv.Tpo -c -o XSECEnv.lo `test -f 'framework/XSECEnv.cpp' || echo '$(srcdir)/'`framework/XSECEnv.cpp
	$(am__mv) $(DEPDIR)/XSECEnv.Tpo $(DEPDIR)/XSECEnv.Plo
#	source='framework/XSECEnv.cpp' object='XSECEnv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECEnv.lo `test -f 'framework/XSECEnv.cpp' || echo '$(srcdir)/'`framework/XSECEnv.cpp

XSECProvider.lo: framework/XSECProvider.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECProvider.lo -MD -MP -MF $(DEPDIR)/XSECProvider.Tpo -c -o XSECProvider.lo `test -f 'framework/XSECProvider.cpp' || echo '$(srcdir)/'`framework/XSECProvider.cpp
	$(am__mv) $(DEPDIR)/XSECProvider.Tpo $(DEPDIR)/XSECProvider.Plo
#	source='framework/XSECProvider.cpp' object='XSECProvider.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECProvider.lo `test -f 'framework/XSECProvider.cpp' || echo '$(srcdir)/'`framework/XSECProvider.cpp

XSECException.lo: framework/XSECException.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECException.lo -MD -MP -MF $(DEPDIR)/XSECException.Tpo -c -o XSECException.lo `test -f 'framework/XSECException.cpp' || echo '$(srcdir)/'`framework/XSECException.cpp
	$(am__mv) $(DEPDIR)/XSECException.Tpo $(DEPDIR)/XSECException.Plo
#	source='framework/XSECException.cpp' object='XSECException.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECException.lo `test -f 'framework/XSECException.cpp' || echo '$(srcdir)/'`framework/XSECException.cpp

XSECURIResolverXerces.lo: framework/XSECURIResolverXerces.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECURIResolverXerces.lo -MD -MP -MF $(DEPDIR)/XSECURIResolverXerces.Tpo -c -o XSECURIResolverXerces.lo `test -f 'framework/XSECURIResolverXerces.cpp' || echo '$(srcdir)/'`framework/XSECURIResolverXerces.cpp
	$(am__mv) $(DEPDIR)/XSECURIResolverXerces.Tpo $(DEPDIR)/XSECURIResolverXerces.Plo
#	source='framework/XSECURIResolverXerces.cpp' object='XSECURIResolverXerces.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECURIResolverXerces.lo `test -f 'framework/XSECURIResolverXerces.cpp' || echo '$(srcdir)/'`framework/XSECURIResolverXerces.cpp

TXFMBase.lo: transformers/TXFMBase.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMBase.lo -MD -MP -MF $(DEPDIR)/TXFMBase.Tpo -c -o TXFMBase.lo `test -f 'transformers/TXFMBase.cpp' || echo '$(srcdir)/'`transformers/TXFMBase.cpp
	$(am__mv) $(DEPDIR)/TXFMBase.Tpo $(DEPDIR)/TXFMBase.Plo
#	source='transformers/TXFMBase.cpp' object='TXFMBase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMBase.lo `test -f 'transformers/TXFMBase.cpp' || echo '$(srcdir)/'`transformers/TXFMBase.cpp

TXFMChain.lo: transformers/TXFMChain.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMChain.lo -MD -MP -MF $(DEPDIR)/TXFMChain.Tpo -c -o TXFMChain.lo `test -f 'transformers/TXFMChain.cpp' || echo '$(srcdir)/'`transformers/TXFMChain.cpp
	$(am__mv) $(DEPDIR)/TXFMChain.Tpo $(DEPDIR)/TXFMChain.Plo
#	source='transformers/TXFMChain.cpp' object='TXFMChain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMChain.lo `test -f 'transformers/TXFMChain.cpp' || echo '$(srcdir)/'`transformers/TXFMChain.cpp

TXFMCipher.lo: transformers/TXFMCipher.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMCipher.lo -MD -MP -MF $(DEPDIR)/TXFMCipher.Tpo -c -o TXFMCipher.lo `test -f 'transformers/TXFMCipher.cpp' || echo '$(srcdir)/'`transformers/TXFMCipher.cpp
	$(am__mv) $(DEPDIR)/TXFMCipher.Tpo $(DEPDIR)/TXFMCipher.Plo
#	source='transformers/TXFMCipher.cpp' object='TXFMCipher.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMCipher.lo `test -f 'transformers/TXFMCipher.cpp' || echo '$(srcdir)/'`transformers/TXFMCipher.cpp

TXFMParser.lo: transformers/TXFMParser.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMParser.lo -MD -MP -MF $(DEPDIR)/TXFMParser.Tpo -c -o TXFMParser.lo `test -f 'transformers/TXFMParser.cpp' || echo '$(srcdir)/'`transformers/TXFMParser.cpp
	$(am__mv) $(DEPDIR)/TXFMParser.Tpo $(DEPDIR)/TXFMParser.Plo
#	source='transformers/TXFMParser.cpp' object='TXFMParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMParser.lo `test -f 'transformers/TXFMParser.cpp' || echo '$(srcdir)/'`transformers/TXFMParser.cpp

TXFMSB.lo: transformers/TXFMSB.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMSB.lo -MD -MP -MF $(DEPDIR)/TXFMSB.Tpo -c -o TXFMSB.lo `test -f 'transformers/TXFMSB.cpp' || echo '$(srcdir)/'`transformers/TXFMSB.cpp
	$(am__mv) $(DEPDIR)/TXFMSB.Tpo $(DEPDIR)/TXFMSB.Plo
#	source='transformers/TXFMSB.cpp' object='TXFMSB.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMSB.lo `test -f 'transformers/TXFMSB.cpp' || echo '$(srcdir)/'`transformers/TXFMSB.cpp

TXFMEnvelope.lo: transformers/TXFMEnvelope.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMEnvelope.lo -MD -MP -MF $(DEPDIR)/TXFMEnvelope.Tpo -c -o TXFMEnvelope.lo `test -f 'transformers/TXFMEnvelope.cpp' || echo '$(srcdir)/'`transformers/TXFMEnvelope.cpp
	$(am__mv) $(DEPDIR)/TXFMEnvelope.Tpo $(DEPDIR)/TXFMEnvelope.Plo
#	source='transformers/TXFMEnvelope.cpp' object='TXFMEnvelope.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMEnvelope.lo `test -f 'transformers/TXFMEnvelope.cpp' || echo '$(srcdir)/'`transformers/TXFMEnvelope.cpp

TXFMBase64.lo: transformers/TXFMBase64.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMBase64.lo -MD -MP -MF $(DEPDIR)/TXFMBase64.Tpo -c -o TXFMBase64.lo `test -f 'transformers/TXFMBase64.cpp' || echo '$(srcdir)/'`transformers/TXFMBase64.cpp
	$(am__mv) $(DEPDIR)/TXFMBase64.Tpo $(DEPDIR)/TXFMBase64.Plo
#	source='transformers/TXFMBase64.cpp' object='TXFMBase64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMBase64.lo `test -f 'transformers/TXFMBase64.cpp' || echo '$(srcdir)/'`transformers/TXFMBase64.cpp

TXFMXPathFilter.lo: transformers/TXFMXPathFilter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMXPathFilter.lo -MD -MP -MF $(DEPDIR)/TXFMXPathFilter.Tpo -c -o TXFMXPathFilter.lo `test -f 'transformers/TXFMXPathFilter.cpp' || echo '$(srcdir)/'`transformers/TXFMXPathFilter.cpp
	$(am__mv) $(DEPDIR)/TXFMXPathFilter.Tpo $(DEPDIR)/TXFMXPathFilter.Plo
#	source='transformers/TXFMXPathFilter.cpp' object='TXFMXPathFilter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMXPathFilter.lo `test -f 'transformers/TXFMXPathFilter.cpp' || echo '$(srcdir)/'`transformers/TXFMXPathFilter.cpp

TXFMSHA1.lo: transformers/TXFMSHA1.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMSHA1.lo -MD -MP -MF $(DEPDIR)/TXFMSHA1.Tpo -c -o TXFMSHA1.lo `test -f 'transformers/TXFMSHA1.cpp' || echo '$(srcdir)/'`transformers/TXFMSHA1.cpp
	$(am__mv) $(DEPDIR)/TXFMSHA1.Tpo $(DEPDIR)/TXFMSHA1.Plo
#	source='transformers/TXFMSHA1.cpp' object='TXFMSHA1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMSHA1.lo `test -f 'transformers/TXFMSHA1.cpp' || echo '$(srcdir)/'`transformers/TXFMSHA1.cpp

TXFMC14n.lo: transformers/TXFMC14n.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMC14n.lo -MD -MP -MF $(DEPDIR)/TXFMC14n.Tpo -c -o TXFMC14n.lo `test -f 'transformers/TXFMC14n.cpp' || echo '$(srcdir)/'`transformers/TXFMC14n.cpp
	$(am__mv) $(DEPDIR)/TXFMC14n.Tpo $(DEPDIR)/TXFMC14n.Plo
#	source='transformers/TXFMC14n.cpp' object='TXFMC14n.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMC14n.lo `test -f 'transformers/TXFMC14n.cpp' || echo '$(srcdir)/'`transformers/TXFMC14n.cpp

TXFMURL.lo: transformers/TXFMURL.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMURL.lo -MD -MP -MF $(DEPDIR)/TXFMURL.Tpo -c -o TXFMURL.lo `test -f 'transformers/TXFMURL.cpp' || echo '$(srcdir)/'`transformers/TXFMURL.cpp
	$(am__mv) $(DEPDIR)/TXFMURL.Tpo $(DEPDIR)/TXFMURL.Plo
#	source='transformers/TXFMURL.cpp' object='TXFMURL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMURL.lo `test -f 'transformers/TXFMURL.cpp' || echo '$(srcdir)/'`transformers/TXFMURL.cpp

TXFMOutputFile.lo: transformers/TXFMOutputFile.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMOutputFile.lo -MD -MP -MF $(DEPDIR)/TXFMOutputFile.Tpo -c -o TXFMOutputFile.lo `test -f 'transformers/TXFMOutputFile.cpp' || echo '$(srcdir)/'`transformers/TXFMOutputFile.cpp
	$(am__mv) $(DEPDIR)/TXFMOutputFile.Tpo $(DEPDIR)/TXFMOutputFile.Plo
#	source='transformers/TXFMOutputFile.cpp' object='TXFMOutputFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMOutputFile.lo `test -f 'transformers/TXFMOutputFile.cpp' || echo '$(srcdir)/'`transformers/TXFMOutputFile.cpp

TXFMXPath.lo: transformers/TXFMXPath.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMXPath.lo -MD -MP -MF $(DEPDIR)/TXFMXPath.Tpo -c -o TXFMXPath.lo `test -f 'transformers/TXFMXPath.cpp' || echo '$(srcdir)/'`transformers/TXFMXPath.cpp
	$(am__mv) $(DEPDIR)/TXFMXPath.Tpo $(DEPDIR)/TXFMXPath.Plo
#	source='transformers/TXFMXPath.cpp' object='TXFMXPath.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMXPath.lo `test -f 'transformers/TXFMXPath.cpp' || echo '$(srcdir)/'`transformers/TXFMXPath.cpp

TXFMXSL.lo: transformers/TXFMXSL.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMXSL.lo -MD -MP -MF $(DEPDIR)/TXFMXSL.Tpo -c -o TXFMXSL.lo `test -f 'transformers/TXFMXSL.cpp' || echo '$(srcdir)/'`transformers/TXFMXSL.cpp
	$(am__mv) $(DEPDIR)/TXFMXSL.Tpo $(DEPDIR)/TXFMXSL.Plo
#	source='transformers/TXFMXSL.cpp' object='TXFMXSL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMXSL.lo `test -f 'transformers/TXFMXSL.cpp' || echo '$(srcdir)/'`transformers/TXFMXSL.cpp

TXFMDocObject.lo: transformers/TXFMDocObject.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMDocObject.lo -MD -MP -MF $(DEPDIR)/TXFMDocObject.Tpo -c -o TXFMDocObject.lo `test -f 'transformers/TXFMDocObject.cpp' || echo '$(srcdir)/'`transformers/TXFMDocObject.cpp
	$(am__mv) $(DEPDIR)/TXFMDocObject.Tpo $(DEPDIR)/TXFMDocObject.Plo
#	source='transformers/TXFMDocObject.cpp' object='TXFMDocObject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMDocObject.lo `test -f 'transformers/TXFMDocObject.cpp' || echo '$(srcdir)/'`transformers/TXFMDocObject.cpp

TXFMConcatChains.lo: transformers/TXFMConcatChains.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMConcatChains.lo -MD -MP -MF $(DEPDIR)/TXFMConcatChains.Tpo -c -o TXFMConcatChains.lo `test -f 'transformers/TXFMConcatChains.cpp' || echo '$(srcdir)/'`transformers/TXFMConcatChains.cpp
	$(am__mv) $(DEPDIR)/TXFMConcatChains.Tpo $(DEPDIR)/TXFMConcatChains.Plo
#	source='transformers/TXFMConcatChains.cpp' object='TXFMConcatChains.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMConcatChains.lo `test -f 'transformers/TXFMConcatChains.cpp' || echo '$(srcdir)/'`transformers/TXFMConcatChains.cpp

TXFMMD5.lo: transformers/TXFMMD5.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TXFMMD5.lo -MD -MP -MF $(DEPDIR)/TXFMMD5.Tpo -c -o TXFMMD5.lo `test -f 'transformers/TXFMMD5.cpp' || echo '$(srcdir)/'`transformers/TXFMMD5.cpp
	$(am__mv) $(DEPDIR)/TXFMMD5.Tpo $(DEPDIR)/TXFMMD5.Plo
#	source='transformers/TXFMMD5.cpp' object='TXFMMD5.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TXFMMD5.lo `test -f 'transformers/TXFMMD5.cpp' || echo '$(srcdir)/'`transformers/TXFMMD5.cpp

XSECSOAPRequestorSimpleUnix.lo: utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECSOAPRequestorSimpleUnix.lo -MD -MP -MF $(DEPDIR)/XSECSOAPRequestorSimpleUnix.Tpo -c -o XSECSOAPRequestorSimpleUnix.lo `test -f 'utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp' || echo '$(srcdir)/'`utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp
	$(am__mv) $(DEPDIR)/XSECSOAPRequestorSimpleUnix.Tpo $(DEPDIR)/XSECSOAPRequestorSimpleUnix.Plo
#	source='utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp' object='XSECSOAPRequestorSimpleUnix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECSOAPRequestorSimpleUnix.lo `test -f 'utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp' || echo '$(srcdir)/'`utils/unixutils/XSECSOAPRequestorSimpleUnix.cpp

XSECURIResolverGenericUnix.lo: utils/unixutils/XSECURIResolverGenericUnix.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECURIResolverGenericUnix.lo -MD -MP -MF $(DEPDIR)/XSECURIResolverGenericUnix.Tpo -c -o XSECURIResolverGenericUnix.lo `test -f 'utils/unixutils/XSECURIResolverGenericUnix.cpp' || echo '$(srcdir)/'`utils/unixutils/XSECURIResolverGenericUnix.cpp
	$(am__mv) $(DEPDIR)/XSECURIResolverGenericUnix.Tpo $(DEPDIR)/XSECURIResolverGenericUnix.Plo
#	source='utils/unixutils/XSECURIResolverGenericUnix.cpp' object='XSECURIResolverGenericUnix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECURIResolverGenericUnix.lo `test -f 'utils/unixutils/XSECURIResolverGenericUnix.cpp' || echo '$(srcdir)/'`utils/unixutils/XSECURIResolverGenericUnix.cpp

XSECBinHTTPURIInputStream.lo: utils/unixutils/XSECBinHTTPURIInputStream.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECBinHTTPURIInputStream.lo -MD -MP -MF $(DEPDIR)/XSECBinHTTPURIInputStream.Tpo -c -o XSECBinHTTPURIInputStream.lo `test -f 'utils/unixutils/XSECBinHTTPURIInputStream.cpp' || echo '$(srcdir)/'`utils/unixutils/XSECBinHTTPURIInputStream.cpp
	$(am__mv) $(DEPDIR)/XSECBinHTTPURIInputStream.Tpo $(DEPDIR)/XSECBinHTTPURIInputStream.Plo
#	source='utils/unixutils/XSECBinHTTPURIInputStream.cpp' object='XSECBinHTTPURIInputStream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECBinHTTPURIInputStream.lo `test -f 'utils/unixutils/XSECBinHTTPURIInputStream.cpp' || echo '$(srcdir)/'`utils/unixutils/XSECBinHTTPURIInputStream.cpp

XSECBinTXFMInputStream.lo: utils/XSECBinTXFMInputStream.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECBinTXFMInputStream.lo -MD -MP -MF $(DEPDIR)/XSECBinTXFMInputStream.Tpo -c -o XSECBinTXFMInputStream.lo `test -f 'utils/XSECBinTXFMInputStream.cpp' || echo '$(srcdir)/'`utils/XSECBinTXFMInputStream.cpp
	$(am__mv) $(DEPDIR)/XSECBinTXFMInputStream.Tpo $(DEPDIR)/XSECBinTXFMInputStream.Plo
#	source='utils/XSECBinTXFMInputStream.cpp' object='XSECBinTXFMInputStream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECBinTXFMInputStream.lo `test -f 'utils/XSECBinTXFMInputStream.cpp' || echo '$(srcdir)/'`utils/XSECBinTXFMInputStream.cpp

XSECXPathNodeList.lo: utils/XSECXPathNodeList.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECXPathNodeList.lo -MD -MP -MF $(DEPDIR)/XSECXPathNodeList.Tpo -c -o XSECXPathNodeList.lo `test -f 'utils/XSECXPathNodeList.cpp' || echo '$(srcdir)/'`utils/XSECXPathNodeList.cpp
	$(am__mv) $(DEPDIR)/XSECXPathNodeList.Tpo $(DEPDIR)/XSECXPathNodeList.Plo
#	source='utils/XSECXPathNodeList.cpp' object='XSECXPathNodeList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECXPathNodeList.lo `test -f 'utils/XSECXPathNodeList.cpp' || echo '$(srcdir)/'`utils/XSECXPathNodeList.cpp

XSECSafeBuffer.lo: utils/XSECSafeBuffer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECSafeBuffer.lo -MD -MP -MF $(DEPDIR)/XSECSafeBuffer.Tpo -c -o XSECSafeBuffer.lo `test -f 'utils/XSECSafeBuffer.cpp' || echo '$(srcdir)/'`utils/XSECSafeBuffer.cpp
	$(am__mv) $(DEPDIR)/XSECSafeBuffer.Tpo $(DEPDIR)/XSECSafeBuffer.Plo
#	source='utils/XSECSafeBuffer.cpp' object='XSECSafeBuffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECSafeBuffer.lo `test -f 'utils/XSECSafeBuffer.cpp' || echo '$(srcdir)/'`utils/XSECSafeBuffer.cpp

XSECTXFMInputSource.lo: utils/XSECTXFMInputSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECTXFMInputSource.lo -MD -MP -MF $(DEPDIR)/XSECTXFMInputSource.Tpo -c -o XSECTXFMInputSource.lo `test -f 'utils/XSECTXFMInputSource.cpp' || echo '$(srcdir)/'`utils/XSECTXFMInputSource.cpp
	$(am__mv) $(DEPDIR)/XSECTXFMInputSource.Tpo $(DEPDIR)/XSECTXFMInputSource.Plo
#	source='utils/XSECTXFMInputSource.cpp' object='XSECTXFMInputSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECTXFMInputSource.lo `test -f 'utils/XSECTXFMInputSource.cpp' || echo '$(srcdir)/'`utils/XSECTXFMInputSource.cpp

XSECDOMUtils.lo: utils/XSECDOMUtils.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECDOMUtils.lo -MD -MP -MF $(DEPDIR)/XSECDOMUtils.Tpo -c -o XSECDOMUtils.lo `test -f 'utils/XSECDOMUtils.cpp' || echo '$(srcdir)/'`utils/XSECDOMUtils.cpp
	$(am__mv) $(DEPDIR)/XSECDOMUtils.Tpo $(DEPDIR)/XSECDOMUtils.Plo
#	source='utils/XSECDOMUtils.cpp' object='XSECDOMUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECDOMUtils.lo `test -f 'utils/XSECDOMUtils.cpp' || echo '$(srcdir)/'`utils/XSECDOMUtils.cpp

XSECSafeBufferFormatter.lo: utils/XSECSafeBufferFormatter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECSafeBufferFormatter.lo -MD -MP -MF $(DEPDIR)/XSECSafeBufferFormatter.Tpo -c -o XSECSafeBufferFormatter.lo `test -f 'utils/XSECSafeBufferFormatter.cpp' || echo '$(srcdir)/'`utils/XSECSafeBufferFormatter.cpp
	$(am__mv) $(DEPDIR)/XSECSafeBufferFormatter.Tpo $(DEPDIR)/XSECSafeBufferFormatter.Plo
#	source='utils/XSECSafeBufferFormatter.cpp' object='XSECSafeBufferFormatter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECSafeBufferFormatter.lo `test -f 'utils/XSECSafeBufferFormatter.cpp' || echo '$(srcdir)/'`utils/XSECSafeBufferFormatter.cpp

XSECSOAPRequestorSimple.lo: utils/XSECSOAPRequestorSimple.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECSOAPRequestorSimple.lo -MD -MP -MF $(DEPDIR)/XSECSOAPRequestorSimple.Tpo -c -o XSECSOAPRequestorSimple.lo `test -f 'utils/XSECSOAPRequestorSimple.cpp' || echo '$(srcdir)/'`utils/XSECSOAPRequestorSimple.cpp
	$(am__mv) $(DEPDIR)/XSECSOAPRequestorSimple.Tpo $(DEPDIR)/XSECSOAPRequestorSimple.Plo
#	source='utils/XSECSOAPRequestorSimple.cpp' object='XSECSOAPRequestorSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECSOAPRequestorSimple.lo `test -f 'utils/XSECSOAPRequestorSimple.cpp' || echo '$(srcdir)/'`utils/XSECSOAPRequestorSimple.cpp

XSECNameSpaceExpander.lo: utils/XSECNameSpaceExpander.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECNameSpaceExpander.lo -MD -MP -MF $(DEPDIR)/XSECNameSpaceExpander.Tpo -c -o XSECNameSpaceExpander.lo `test -f 'utils/XSECNameSpaceExpander.cpp' || echo '$(srcdir)/'`utils/XSECNameSpaceExpander.cpp
	$(am__mv) $(DEPDIR)/XSECNameSpaceExpander.Tpo $(DEPDIR)/XSECNameSpaceExpander.Plo
#	source='utils/XSECNameSpaceExpander.cpp' object='XSECNameSpaceExpander.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECNameSpaceExpander.lo `test -f 'utils/XSECNameSpaceExpander.cpp' || echo '$(srcdir)/'`utils/XSECNameSpaceExpander.cpp

XSECPlatformUtils.lo: utils/XSECPlatformUtils.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XSECPlatformUtils.lo -MD -MP -MF $(DEPDIR)/XSECPlatformUtils.Tpo -c -o XSECPlatformUtils.lo `test -f 'utils/XSECPlatformUtils.cpp' || echo '$(srcdir)/'`utils/XSECPlatformUtils.cpp
	$(am__mv) $(DEPDIR)/XSECPlatformUtils.Tpo $(DEPDIR)/XSECPlatformUtils.Plo
#	source='utils/XSECPlatformUtils.cpp' object='XSECPlatformUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XSECPlatformUtils.lo `test -f 'utils/XSECPlatformUtils.cpp' || echo '$(srcdir)/'`utils/XSECPlatformUtils.cpp

XENCCipherReferenceImpl.lo: xenc/impl/XENCCipherReferenceImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCCipherReferenceImpl.lo -MD -MP -MF $(DEPDIR)/XENCCipherReferenceImpl.Tpo -c -o XENCCipherReferenceImpl.lo `test -f 'xenc/impl/XENCCipherReferenceImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherReferenceImpl.cpp
	$(am__mv) $(DEPDIR)/XENCCipherReferenceImpl.Tpo $(DEPDIR)/XENCCipherReferenceImpl.Plo
#	source='xenc/impl/XENCCipherReferenceImpl.cpp' object='XENCCipherReferenceImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCCipherReferenceImpl.lo `test -f 'xenc/impl/XENCCipherReferenceImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherReferenceImpl.cpp

XENCEncryptionMethodImpl.lo: xenc/impl/XENCEncryptionMethodImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCEncryptionMethodImpl.lo -MD -MP -MF $(DEPDIR)/XENCEncryptionMethodImpl.Tpo -c -o XENCEncryptionMethodImpl.lo `test -f 'xenc/impl/XENCEncryptionMethodImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptionMethodImpl.cpp
	$(am__mv) $(DEPDIR)/XENCEncryptionMethodImpl.Tpo $(DEPDIR)/XENCEncryptionMethodImpl.Plo
#	source='xenc/impl/XENCEncryptionMethodImpl.cpp' object='XENCEncryptionMethodImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCEncryptionMethodImpl.lo `test -f 'xenc/impl/XENCEncryptionMethodImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptionMethodImpl.cpp

XENCCipherValueImpl.lo: xenc/impl/XENCCipherValueImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCCipherValueImpl.lo -MD -MP -MF $(DEPDIR)/XENCCipherValueImpl.Tpo -c -o XENCCipherValueImpl.lo `test -f 'xenc/impl/XENCCipherValueImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherValueImpl.cpp
	$(am__mv) $(DEPDIR)/XENCCipherValueImpl.Tpo $(DEPDIR)/XENCCipherValueImpl.Plo
#	source='xenc/impl/XENCCipherValueImpl.cpp' object='XENCCipherValueImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCCipherValueImpl.lo `test -f 'xenc/impl/XENCCipherValueImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherValueImpl.cpp

XENCAlgorithmHandlerDefault.lo: xenc/impl/XENCAlgorithmHandlerDefault.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCAlgorithmHandlerDefault.lo -MD -MP -MF $(DEPDIR)/XENCAlgorithmHandlerDefault.Tpo -c -o XENCAlgorithmHandlerDefault.lo `test -f 'xenc/impl/XENCAlgorithmHandlerDefault.cpp' || echo '$(srcdir)/'`xenc/impl/XENCAlgorithmHandlerDefault.cpp
	$(am__mv) $(DEPDIR)/XENCAlgorithmHandlerDefault.Tpo $(DEPDIR)/XENCAlgorithmHandlerDefault.Plo
#	source='xenc/impl/XENCAlgorithmHandlerDefault.cpp' object='XENCAlgorithmHandlerDefault.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCAlgorithmHandlerDefault.lo `test -f 'xenc/impl/XENCAlgorithmHandlerDefault.cpp' || echo '$(srcdir)/'`xenc/impl/XENCAlgorithmHandlerDefault.cpp

XENCEncryptedDataImpl.lo: xenc/impl/XENCEncryptedDataImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCEncryptedDataImpl.lo -MD -MP -MF $(DEPDIR)/XENCEncryptedDataImpl.Tpo -c -o XENCEncryptedDataImpl.lo `test -f 'xenc/impl/XENCEncryptedDataImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptedDataImpl.cpp
	$(am__mv) $(DEPDIR)/XENCEncryptedDataImpl.Tpo $(DEPDIR)/XENCEncryptedDataImpl.Plo
#	source='xenc/impl/XENCEncryptedDataImpl.cpp' object='XENCEncryptedDataImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCEncryptedDataImpl.lo `test -f 'xenc/impl/XENCEncryptedDataImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptedDataImpl.cpp

XENCCipherDataImpl.lo: xenc/impl/XENCCipherDataImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCCipherDataImpl.lo -MD -MP -MF $(DEPDIR)/XENCCipherDataImpl.Tpo -c -o XENCCipherDataImpl.lo `test -f 'xenc/impl/XENCCipherDataImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherDataImpl.cpp
	$(am__mv) $(DEPDIR)/XENCCipherDataImpl.Tpo $(DEPDIR)/XENCCipherDataImpl.Plo
#	source='xenc/impl/XENCCipherDataImpl.cpp' object='XENCCipherDataImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCCipherDataImpl.lo `test -f 'xenc/impl/XENCCipherDataImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherDataImpl.cpp

XENCEncryptedTypeImpl.lo: xenc/impl/XENCEncryptedTypeImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCEncryptedTypeImpl.lo -MD -MP -MF $(DEPDIR)/XENCEncryptedTypeImpl.Tpo -c -o XENCEncryptedTypeImpl.lo `test -f 'xenc/impl/XENCEncryptedTypeImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptedTypeImpl.cpp
	$(am__mv) $(DEPDIR)/XENCEncryptedTypeImpl.Tpo $(DEPDIR)/XENCEncryptedTypeImpl.Plo
#	source='xenc/impl/XENCEncryptedTypeImpl.cpp' object='XENCEncryptedTypeImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCEncryptedTypeImpl.lo `test -f 'xenc/impl/XENCEncryptedTypeImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptedTypeImpl.cpp

XENCCipherImpl.lo: xenc/impl/XENCCipherImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCCipherImpl.lo -MD -MP -MF $(DEPDIR)/XENCCipherImpl.Tpo -c -o XENCCipherImpl.lo `test -f 'xenc/impl/XENCCipherImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherImpl.cpp
	$(am__mv) $(DEPDIR)/XENCCipherImpl.Tpo $(DEPDIR)/XENCCipherImpl.Plo
#	source='xenc/impl/XENCCipherImpl.cpp' object='XENCCipherImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCCipherImpl.lo `test -f 'xenc/impl/XENCCipherImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCCipherImpl.cpp

XENCEncryptedKeyImpl.lo: xenc/impl/XENCEncryptedKeyImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XENCEncryptedKeyImpl.lo -MD -MP -MF $(DEPDIR)/XENCEncryptedKeyImpl.Tpo -c -o XENCEncryptedKeyImpl.lo `test -f 'xenc/impl/XENCEncryptedKeyImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptedKeyImpl.cpp
	$(am__mv) $(DEPDIR)/XENCEncryptedKeyImpl.Tpo $(DEPDIR)/XENCEncryptedKeyImpl.Plo
#	source='xenc/impl/XENCEncryptedKeyImpl.cpp' object='XENCEncryptedKeyImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XENCEncryptedKeyImpl.lo `test -f 'xenc/impl/XENCEncryptedKeyImpl.cpp' || echo '$(srcdir)/'`xenc/impl/XENCEncryptedKeyImpl.cpp

XKMSConstants.lo: xkms/XKMSConstants.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSConstants.lo -MD -MP -MF $(DEPDIR)/XKMSConstants.Tpo -c -o XKMSConstants.lo `test -f 'xkms/XKMSConstants.cpp' || echo '$(srcdir)/'`xkms/XKMSConstants.cpp
	$(am__mv) $(DEPDIR)/XKMSConstants.Tpo $(DEPDIR)/XKMSConstants.Plo
#	source='xkms/XKMSConstants.cpp' object='XKMSConstants.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSConstants.lo `test -f 'xkms/XKMSConstants.cpp' || echo '$(srcdir)/'`xkms/XKMSConstants.cpp

XKMSCompoundRequestImpl.lo: xkms/impl/XKMSCompoundRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSCompoundRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSCompoundRequestImpl.Tpo -c -o XKMSCompoundRequestImpl.lo `test -f 'xkms/impl/XKMSCompoundRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSCompoundRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSCompoundRequestImpl.Tpo $(DEPDIR)/XKMSCompoundRequestImpl.Plo
#	source='xkms/impl/XKMSCompoundRequestImpl.cpp' object='XKMSCompoundRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSCompoundRequestImpl.lo `test -f 'xkms/impl/XKMSCompoundRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSCompoundRequestImpl.cpp

XKMSRecoverRequestImpl.lo: xkms/impl/XKMSRecoverRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRecoverRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRecoverRequestImpl.Tpo -c -o XKMSRecoverRequestImpl.lo `test -f 'xkms/impl/XKMSRecoverRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRecoverRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRecoverRequestImpl.Tpo $(DEPDIR)/XKMSRecoverRequestImpl.Plo
#	source='xkms/impl/XKMSRecoverRequestImpl.cpp' object='XKMSRecoverRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRecoverRequestImpl.lo `test -f 'xkms/impl/XKMSRecoverRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRecoverRequestImpl.cpp

XKMSRegisterResultImpl.lo: xkms/impl/XKMSRegisterResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRegisterResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRegisterResultImpl.Tpo -c -o XKMSRegisterResultImpl.lo `test -f 'xkms/impl/XKMSRegisterResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRegisterResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRegisterResultImpl.Tpo $(DEPDIR)/XKMSRegisterResultImpl.Plo
#	source='xkms/impl/XKMSRegisterResultImpl.cpp' object='XKMSRegisterResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRegisterResultImpl.lo `test -f 'xkms/impl/XKMSRegisterResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRegisterResultImpl.cpp

XKMSRecoverResultImpl.lo: xkms/impl/XKMSRecoverResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRecoverResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRecoverResultImpl.Tpo -c -o XKMSRecoverResultImpl.lo `test -f 'xkms/impl/XKMSRecoverResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRecoverResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRecoverResultImpl.Tpo $(DEPDIR)/XKMSRecoverResultImpl.Plo
#	source='xkms/impl/XKMSRecoverResultImpl.cpp' object='XKMSRecoverResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRecoverResultImpl.lo `test -f 'xkms/impl/XKMSRecoverResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRecoverResultImpl.cpp

XKMSCompoundResultImpl.lo: xkms/impl/XKMSCompoundResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSCompoundResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSCompoundResultImpl.Tpo -c -o XKMSCompoundResultImpl.lo `test -f 'xkms/impl/XKMSCompoundResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSCompoundResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSCompoundResultImpl.Tpo $(DEPDIR)/XKMSCompoundResultImpl.Plo
#	source='xkms/impl/XKMSCompoundResultImpl.cpp' object='XKMSCompoundResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSCompoundResultImpl.lo `test -f 'xkms/impl/XKMSCompoundResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSCompoundResultImpl.cpp

XKMSRevokeKeyBindingImpl.lo: xkms/impl/XKMSRevokeKeyBindingImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRevokeKeyBindingImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRevokeKeyBindingImpl.Tpo -c -o XKMSRevokeKeyBindingImpl.lo `test -f 'xkms/impl/XKMSRevokeKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRevokeKeyBindingImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRevokeKeyBindingImpl.Tpo $(DEPDIR)/XKMSRevokeKeyBindingImpl.Plo
#	source='xkms/impl/XKMSRevokeKeyBindingImpl.cpp' object='XKMSRevokeKeyBindingImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRevokeKeyBindingImpl.lo `test -f 'xkms/impl/XKMSRevokeKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRevokeKeyBindingImpl.cpp

XKMSKeyBindingAbstractTypeImpl.lo: xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSKeyBindingAbstractTypeImpl.lo -MD -MP -MF $(DEPDIR)/XKMSKeyBindingAbstractTypeImpl.Tpo -c -o XKMSKeyBindingAbstractTypeImpl.lo `test -f 'xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSKeyBindingAbstractTypeImpl.Tpo $(DEPDIR)/XKMSKeyBindingAbstractTypeImpl.Plo
#	source='xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp' object='XKMSKeyBindingAbstractTypeImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSKeyBindingAbstractTypeImpl.lo `test -f 'xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSKeyBindingAbstractTypeImpl.cpp

XKMSPrototypeKeyBindingImpl.lo: xkms/impl/XKMSPrototypeKeyBindingImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSPrototypeKeyBindingImpl.lo -MD -MP -MF $(DEPDIR)/XKMSPrototypeKeyBindingImpl.Tpo -c -o XKMSPrototypeKeyBindingImpl.lo `test -f 'xkms/impl/XKMSPrototypeKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSPrototypeKeyBindingImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSPrototypeKeyBindingImpl.Tpo $(DEPDIR)/XKMSPrototypeKeyBindingImpl.Plo
#	source='xkms/impl/XKMSPrototypeKeyBindingImpl.cpp' object='XKMSPrototypeKeyBindingImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSPrototypeKeyBindingImpl.lo `test -f 'xkms/impl/XKMSPrototypeKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSPrototypeKeyBindingImpl.cpp

XKMSValidateResultImpl.lo: xkms/impl/XKMSValidateResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSValidateResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSValidateResultImpl.Tpo -c -o XKMSValidateResultImpl.lo `test -f 'xkms/impl/XKMSValidateResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSValidateResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSValidateResultImpl.Tpo $(DEPDIR)/XKMSValidateResultImpl.Plo
#	source='xkms/impl/XKMSValidateResultImpl.cpp' object='XKMSValidateResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSValidateResultImpl.lo `test -f 'xkms/impl/XKMSValidateResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSValidateResultImpl.cpp

XKMSAuthenticationImpl.lo: xkms/impl/XKMSAuthenticationImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSAuthenticationImpl.lo -MD -MP -MF $(DEPDIR)/XKMSAuthenticationImpl.Tpo -c -o XKMSAuthenticationImpl.lo `test -f 'xkms/impl/XKMSAuthenticationImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSAuthenticationImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSAuthenticationImpl.Tpo $(DEPDIR)/XKMSAuthenticationImpl.Plo
#	source='xkms/impl/XKMSAuthenticationImpl.cpp' object='XKMSAuthenticationImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSAuthenticationImpl.lo `test -f 'xkms/impl/XKMSAuthenticationImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSAuthenticationImpl.cpp

XKMSStatusResultImpl.lo: xkms/impl/XKMSStatusResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSStatusResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSStatusResultImpl.Tpo -c -o XKMSStatusResultImpl.lo `test -f 'xkms/impl/XKMSStatusResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSStatusResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSStatusResultImpl.Tpo $(DEPDIR)/XKMSStatusResultImpl.Plo
#	source='xkms/impl/XKMSStatusResultImpl.cpp' object='XKMSStatusResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSStatusResultImpl.lo `test -f 'xkms/impl/XKMSStatusResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSStatusResultImpl.cpp

XKMSReissueRequestImpl.lo: xkms/impl/XKMSReissueRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSReissueRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSReissueRequestImpl.Tpo -c -o XKMSReissueRequestImpl.lo `test -f 'xkms/impl/XKMSReissueRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSReissueRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSReissueRequestImpl.Tpo $(DEPDIR)/XKMSReissueRequestImpl.Plo
#	source='xkms/impl/XKMSReissueRequestImpl.cpp' object='XKMSReissueRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSReissueRequestImpl.lo `test -f 'xkms/impl/XKMSReissueRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSReissueRequestImpl.cpp

XKMSKeyBindingImpl.lo: xkms/impl/XKMSKeyBindingImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSKeyBindingImpl.lo -MD -MP -MF $(DEPDIR)/XKMSKeyBindingImpl.Tpo -c -o XKMSKeyBindingImpl.lo `test -f 'xkms/impl/XKMSKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSKeyBindingImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSKeyBindingImpl.Tpo $(DEPDIR)/XKMSKeyBindingImpl.Plo
#	source='xkms/impl/XKMSKeyBindingImpl.cpp' object='XKMSKeyBindingImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSKeyBindingImpl.lo `test -f 'xkms/impl/XKMSKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSKeyBindingImpl.cpp

XKMSRequestAbstractTypeImpl.lo: xkms/impl/XKMSRequestAbstractTypeImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRequestAbstractTypeImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRequestAbstractTypeImpl.Tpo -c -o XKMSRequestAbstractTypeImpl.lo `test -f 'xkms/impl/XKMSRequestAbstractTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRequestAbstractTypeImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRequestAbstractTypeImpl.Tpo $(DEPDIR)/XKMSRequestAbstractTypeImpl.Plo
#	source='xkms/impl/XKMSRequestAbstractTypeImpl.cpp' object='XKMSRequestAbstractTypeImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRequestAbstractTypeImpl.lo `test -f 'xkms/impl/XKMSRequestAbstractTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRequestAbstractTypeImpl.cpp

XKMSRespondWithImpl.lo: xkms/impl/XKMSRespondWithImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRespondWithImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRespondWithImpl.Tpo -c -o XKMSRespondWithImpl.lo `test -f 'xkms/impl/XKMSRespondWithImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRespondWithImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRespondWithImpl.Tpo $(DEPDIR)/XKMSRespondWithImpl.Plo
#	source='xkms/impl/XKMSRespondWithImpl.cpp' object='XKMSRespondWithImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRespondWithImpl.lo `test -f 'xkms/impl/XKMSRespondWithImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRespondWithImpl.cpp

XKMSReissueResultImpl.lo: xkms/impl/XKMSReissueResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSReissueResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSReissueResultImpl.Tpo -c -o XKMSReissueResultImpl.lo `test -f 'xkms/impl/XKMSReissueResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSReissueResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSReissueResultImpl.Tpo $(DEPDIR)/XKMSReissueResultImpl.Plo
#	source='xkms/impl/XKMSReissueResultImpl.cpp' object='XKMSReissueResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSReissueResultImpl.lo `test -f 'xkms/impl/XKMSReissueResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSReissueResultImpl.cpp

XKMSMessageAbstractTypeImpl.lo: xkms/impl/XKMSMessageAbstractTypeImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSMessageAbstractTypeImpl.lo -MD -MP -MF $(DEPDIR)/XKMSMessageAbstractTypeImpl.Tpo -c -o XKMSMessageAbstractTypeImpl.lo `test -f 'xkms/impl/XKMSMessageAbstractTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSMessageAbstractTypeImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSMessageAbstractTypeImpl.Tpo $(DEPDIR)/XKMSMessageAbstractTypeImpl.Plo
#	source='xkms/impl/XKMSMessageAbstractTypeImpl.cpp' object='XKMSMessageAbstractTypeImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSMessageAbstractTypeImpl.lo `test -f 'xkms/impl/XKMSMessageAbstractTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSMessageAbstractTypeImpl.cpp

XKMSRevokeResultImpl.lo: xkms/impl/XKMSRevokeResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRevokeResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRevokeResultImpl.Tpo -c -o XKMSRevokeResultImpl.lo `test -f 'xkms/impl/XKMSRevokeResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRevokeResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRevokeResultImpl.Tpo $(DEPDIR)/XKMSRevokeResultImpl.Plo
#	source='xkms/impl/XKMSRevokeResultImpl.cpp' object='XKMSRevokeResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRevokeResultImpl.lo `test -f 'xkms/impl/XKMSRevokeResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRevokeResultImpl.cpp

XKMSRevokeRequestImpl.lo: xkms/impl/XKMSRevokeRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRevokeRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRevokeRequestImpl.Tpo -c -o XKMSRevokeRequestImpl.lo `test -f 'xkms/impl/XKMSRevokeRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRevokeRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRevokeRequestImpl.Tpo $(DEPDIR)/XKMSRevokeRequestImpl.Plo
#	source='xkms/impl/XKMSRevokeRequestImpl.cpp' object='XKMSRevokeRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRevokeRequestImpl.lo `test -f 'xkms/impl/XKMSRevokeRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRevokeRequestImpl.cpp

XKMSPendingRequestImpl.lo: xkms/impl/XKMSPendingRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSPendingRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSPendingRequestImpl.Tpo -c -o XKMSPendingRequestImpl.lo `test -f 'xkms/impl/XKMSPendingRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSPendingRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSPendingRequestImpl.Tpo $(DEPDIR)/XKMSPendingRequestImpl.Plo
#	source='xkms/impl/XKMSPendingRequestImpl.cpp' object='XKMSPendingRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSPendingRequestImpl.lo `test -f 'xkms/impl/XKMSPendingRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSPendingRequestImpl.cpp

XKMSValidateRequestImpl.lo: xkms/impl/XKMSValidateRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSValidateRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSValidateRequestImpl.Tpo -c -o XKMSValidateRequestImpl.lo `test -f 'xkms/impl/XKMSValidateRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSValidateRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSValidateRequestImpl.Tpo $(DEPDIR)/XKMSValidateRequestImpl.Plo
#	source='xkms/impl/XKMSValidateRequestImpl.cpp' object='XKMSValidateRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSValidateRequestImpl.lo `test -f 'xkms/impl/XKMSValidateRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSValidateRequestImpl.cpp

XKMSRecoverKeyBindingImpl.lo: xkms/impl/XKMSRecoverKeyBindingImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRecoverKeyBindingImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRecoverKeyBindingImpl.Tpo -c -o XKMSRecoverKeyBindingImpl.lo `test -f 'xkms/impl/XKMSRecoverKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRecoverKeyBindingImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRecoverKeyBindingImpl.Tpo $(DEPDIR)/XKMSRecoverKeyBindingImpl.Plo
#	source='xkms/impl/XKMSRecoverKeyBindingImpl.cpp' object='XKMSRecoverKeyBindingImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRecoverKeyBindingImpl.lo `test -f 'xkms/impl/XKMSRecoverKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRecoverKeyBindingImpl.cpp

XKMSRSAKeyPairImpl.lo: xkms/impl/XKMSRSAKeyPairImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRSAKeyPairImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRSAKeyPairImpl.Tpo -c -o XKMSRSAKeyPairImpl.lo `test -f 'xkms/impl/XKMSRSAKeyPairImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRSAKeyPairImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRSAKeyPairImpl.Tpo $(DEPDIR)/XKMSRSAKeyPairImpl.Plo
#	source='xkms/impl/XKMSRSAKeyPairImpl.cpp' object='XKMSRSAKeyPairImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRSAKeyPairImpl.lo `test -f 'xkms/impl/XKMSRSAKeyPairImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRSAKeyPairImpl.cpp

XKMSUnverifiedKeyBindingImpl.lo: xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSUnverifiedKeyBindingImpl.lo -MD -MP -MF $(DEPDIR)/XKMSUnverifiedKeyBindingImpl.Tpo -c -o XKMSUnverifiedKeyBindingImpl.lo `test -f 'xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSUnverifiedKeyBindingImpl.Tpo $(DEPDIR)/XKMSUnverifiedKeyBindingImpl.Plo
#	source='xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp' object='XKMSUnverifiedKeyBindingImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSUnverifiedKeyBindingImpl.lo `test -f 'xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSUnverifiedKeyBindingImpl.cpp

XKMSLocateRequestImpl.lo: xkms/impl/XKMSLocateRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSLocateRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSLocateRequestImpl.Tpo -c -o XKMSLocateRequestImpl.lo `test -f 'xkms/impl/XKMSLocateRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSLocateRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSLocateRequestImpl.Tpo $(DEPDIR)/XKMSLocateRequestImpl.Plo
#	source='xkms/impl/XKMSLocateRequestImpl.cpp' object='XKMSLocateRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSLocateRequestImpl.lo `test -f 'xkms/impl/XKMSLocateRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSLocateRequestImpl.cpp

XKMSResultTypeImpl.lo: xkms/impl/XKMSResultTypeImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSResultTypeImpl.lo -MD -MP -MF $(DEPDIR)/XKMSResultTypeImpl.Tpo -c -o XKMSResultTypeImpl.lo `test -f 'xkms/impl/XKMSResultTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSResultTypeImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSResultTypeImpl.Tpo $(DEPDIR)/XKMSResultTypeImpl.Plo
#	source='xkms/impl/XKMSResultTypeImpl.cpp' object='XKMSResultTypeImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSResultTypeImpl.lo `test -f 'xkms/impl/XKMSResultTypeImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSResultTypeImpl.cpp

XKMSResultImpl.lo: xkms/impl/XKMSResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSResultImpl.Tpo -c -o XKMSResultImpl.lo `test -f 'xkms/impl/XKMSResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSResultImpl.Tpo $(DEPDIR)/XKMSResultImpl.Plo
#	source='xkms/impl/XKMSResultImpl.cpp' object='XKMSResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSResultImpl.lo `test -f 'xkms/impl/XKMSResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSResultImpl.cpp

XKMSValidityIntervalImpl.lo: xkms/impl/XKMSValidityIntervalImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSValidityIntervalImpl.lo -MD -MP -MF $(DEPDIR)/XKMSValidityIntervalImpl.Tpo -c -o XKMSValidityIntervalImpl.lo `test -f 'xkms/impl/XKMSValidityIntervalImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSValidityIntervalImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSValidityIntervalImpl.Tpo $(DEPDIR)/XKMSValidityIntervalImpl.Plo
#	source='xkms/impl/XKMSValidityIntervalImpl.cpp' object='XKMSValidityIntervalImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSValidityIntervalImpl.lo `test -f 'xkms/impl/XKMSValidityIntervalImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSValidityIntervalImpl.cpp

XKMSRegisterRequestImpl.lo: xkms/impl/XKMSRegisterRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSRegisterRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSRegisterRequestImpl.Tpo -c -o XKMSRegisterRequestImpl.lo `test -f 'xkms/impl/XKMSRegisterRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRegisterRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSRegisterRequestImpl.Tpo $(DEPDIR)/XKMSRegisterRequestImpl.Plo
#	source='xkms/impl/XKMSRegisterRequestImpl.cpp' object='XKMSRegisterRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSRegisterRequestImpl.lo `test -f 'xkms/impl/XKMSRegisterRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSRegisterRequestImpl.cpp

XKMSStatusImpl.lo: xkms/impl/XKMSStatusImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSStatusImpl.lo -MD -MP -MF $(DEPDIR)/XKMSStatusImpl.Tpo -c -o XKMSStatusImpl.lo `test -f 'xkms/impl/XKMSStatusImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSStatusImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSStatusImpl.Tpo $(DEPDIR)/XKMSStatusImpl.Plo
#	source='xkms/impl/XKMSStatusImpl.cpp' object='XKMSStatusImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSStatusImpl.lo `test -f 'xkms/impl/XKMSStatusImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSStatusImpl.cpp

XKMSStatusRequestImpl.lo: xkms/impl/XKMSStatusRequestImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSStatusRequestImpl.lo -MD -MP -MF $(DEPDIR)/XKMSStatusRequestImpl.Tpo -c -o XKMSStatusRequestImpl.lo `test -f 'xkms/impl/XKMSStatusRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSStatusRequestImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSStatusRequestImpl.Tpo $(DEPDIR)/XKMSStatusRequestImpl.Plo
#	source='xkms/impl/XKMSStatusRequestImpl.cpp' object='XKMSStatusRequestImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSStatusRequestImpl.lo `test -f 'xkms/impl/XKMSStatusRequestImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSStatusRequestImpl.cpp

XKMSReissueKeyBindingImpl.lo: xkms/impl/XKMSReissueKeyBindingImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSReissueKeyBindingImpl.lo -MD -MP -MF $(DEPDIR)/XKMSReissueKeyBindingImpl.Tpo -c -o XKMSReissueKeyBindingImpl.lo `test -f 'xkms/impl/XKMSReissueKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSReissueKeyBindingImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSReissueKeyBindingImpl.Tpo $(DEPDIR)/XKMSReissueKeyBindingImpl.Plo
#	source='xkms/impl/XKMSReissueKeyBindingImpl.cpp' object='XKMSReissueKeyBindingImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSReissueKeyBindingImpl.lo `test -f 'xkms/impl/XKMSReissueKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSReissueKeyBindingImpl.cpp

XKMSMessageFactoryImpl.lo: xkms/impl/XKMSMessageFactoryImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSMessageFactoryImpl.lo -MD -MP -MF $(DEPDIR)/XKMSMessageFactoryImpl.Tpo -c -o XKMSMessageFactoryImpl.lo `test -f 'xkms/impl/XKMSMessageFactoryImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSMessageFactoryImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSMessageFactoryImpl.Tpo $(DEPDIR)/XKMSMessageFactoryImpl.Plo
#	source='xkms/impl/XKMSMessageFactoryImpl.cpp' object='XKMSMessageFactoryImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSMessageFactoryImpl.lo `test -f 'xkms/impl/XKMSMessageFactoryImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSMessageFactoryImpl.cpp

XKMSResponseMechanismImpl.lo: xkms/impl/XKMSResponseMechanismImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSResponseMechanismImpl.lo -MD -MP -MF $(DEPDIR)/XKMSResponseMechanismImpl.Tpo -c -o XKMSResponseMechanismImpl.lo `test -f 'xkms/impl/XKMSResponseMechanismImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSResponseMechanismImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSResponseMechanismImpl.Tpo $(DEPDIR)/XKMSResponseMechanismImpl.Plo
#	source='xkms/impl/XKMSResponseMechanismImpl.cpp' object='XKMSResponseMechanismImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSResponseMechanismImpl.lo `test -f 'xkms/impl/XKMSResponseMechanismImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSResponseMechanismImpl.cpp

XKMSNotBoundAuthentication.lo: xkms/impl/XKMSNotBoundAuthentication.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSNotBoundAuthentication.lo -MD -MP -MF $(DEPDIR)/XKMSNotBoundAuthentication.Tpo -c -o XKMSNotBoundAuthentication.lo `test -f 'xkms/impl/XKMSNotBoundAuthentication.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSNotBoundAuthentication.cpp
	$(am__mv) $(DEPDIR)/XKMSNotBoundAuthentication.Tpo $(DEPDIR)/XKMSNotBoundAuthentication.Plo
#	source='xkms/impl/XKMSNotBoundAuthentication.cpp' object='XKMSNotBoundAuthentication.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSNotBoundAuthentication.lo `test -f 'xkms/impl/XKMSNotBoundAuthentication.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSNotBoundAuthentication.cpp

XKMSLocateResultImpl.lo: xkms/impl/XKMSLocateResultImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSLocateResultImpl.lo -MD -MP -MF $(DEPDIR)/XKMSLocateResultImpl.Tpo -c -o XKMSLocateResultImpl.lo `test -f 'xkms/impl/XKMSLocateResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSLocateResultImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSLocateResultImpl.Tpo $(DEPDIR)/XKMSLocateResultImpl.Plo
#	source='xkms/impl/XKMSLocateResultImpl.cpp' object='XKMSLocateResultImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSLocateResultImpl.lo `test -f 'xkms/impl/XKMSLocateResultImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSLocateResultImpl.cpp

XKMSQueryKeyBindingImpl.lo: xkms/impl/XKMSQueryKeyBindingImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSQueryKeyBindingImpl.lo -MD -MP -MF $(DEPDIR)/XKMSQueryKeyBindingImpl.Tpo -c -o XKMSQueryKeyBindingImpl.lo `test -f 'xkms/impl/XKMSQueryKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSQueryKeyBindingImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSQueryKeyBindingImpl.Tpo $(DEPDIR)/XKMSQueryKeyBindingImpl.Plo
#	source='xkms/impl/XKMSQueryKeyBindingImpl.cpp' object='XKMSQueryKeyBindingImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSQueryKeyBindingImpl.lo `test -f 'xkms/impl/XKMSQueryKeyBindingImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSQueryKeyBindingImpl.cpp

XKMSUseKeyWithImpl.lo: xkms/impl/XKMSUseKeyWithImpl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XKMSUseKeyWithImpl.lo -MD -MP -MF $(DEPDIR)/XKMSUseKeyWithImpl.Tpo -c -o XKMSUseKeyWithImpl.lo `test -f 'xkms/impl/XKMSUseKeyWithImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSUseKeyWithImpl.cpp
	$(am__mv) $(DEPDIR)/XKMSUseKeyWithImpl.Tpo $(DEPDIR)/XKMSUseKeyWithImpl.Plo
#	source='xkms/impl/XKMSUseKeyWithImpl.cpp' object='XKMSUseKeyWithImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XKMSUseKeyWithImpl.lo `test -f 'xkms/impl/XKMSUseKeyWithImpl.cpp' || echo '$(srcdir)/'`xkms/impl/XKMSUseKeyWithImpl.cpp

OpenSSLCryptoHashHMAC.lo: enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoHashHMAC.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoHashHMAC.Tpo -c -o OpenSSLCryptoHashHMAC.lo `test -f 'enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoHashHMAC.Tpo $(DEPDIR)/OpenSSLCryptoHashHMAC.Plo
#	source='enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp' object='OpenSSLCryptoHashHMAC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoHashHMAC.lo `test -f 'enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoHashHMAC.cpp

OpenSSLCryptoKeyRSA.lo: enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoKeyRSA.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoKeyRSA.Tpo -c -o OpenSSLCryptoKeyRSA.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoKeyRSA.Tpo $(DEPDIR)/OpenSSLCryptoKeyRSA.Plo
#	source='enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp' object='OpenSSLCryptoKeyRSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoKeyRSA.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyRSA.cpp

OpenSSLCryptoHash.lo: enc/OpenSSL/OpenSSLCryptoHash.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoHash.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoHash.Tpo -c -o OpenSSLCryptoHash.lo `test -f 'enc/OpenSSL/OpenSSLCryptoHash.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoHash.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoHash.Tpo $(DEPDIR)/OpenSSLCryptoHash.Plo
#	source='enc/OpenSSL/OpenSSLCryptoHash.cpp' object='OpenSSLCryptoHash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoHash.lo `test -f 'enc/OpenSSL/OpenSSLCryptoHash.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoHash.cpp

OpenSSLCryptoProvider.lo: enc/OpenSSL/OpenSSLCryptoProvider.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoProvider.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoProvider.Tpo -c -o OpenSSLCryptoProvider.lo `test -f 'enc/OpenSSL/OpenSSLCryptoProvider.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoProvider.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoProvider.Tpo $(DEPDIR)/OpenSSLCryptoProvider.Plo
#	source='enc/OpenSSL/OpenSSLCryptoProvider.cpp' object='OpenSSLCryptoProvider.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoProvider.lo `test -f 'enc/OpenSSL/OpenSSLCryptoProvider.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoProvider.cpp

OpenSSLCryptoX509.lo: enc/OpenSSL/OpenSSLCryptoX509.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoX509.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoX509.Tpo -c -o OpenSSLCryptoX509.lo `test -f 'enc/OpenSSL/OpenSSLCryptoX509.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoX509.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoX509.Tpo $(DEPDIR)/OpenSSLCryptoX509.Plo
#	source='enc/OpenSSL/OpenSSLCryptoX509.cpp' object='OpenSSLCryptoX509.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoX509.lo `test -f 'enc/OpenSSL/OpenSSLCryptoX509.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoX509.cpp

OpenSSLCryptoBase64.lo: enc/OpenSSL/OpenSSLCryptoBase64.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoBase64.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoBase64.Tpo -c -o OpenSSLCryptoBase64.lo `test -f 'enc/OpenSSL/OpenSSLCryptoBase64.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoBase64.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoBase64.Tpo $(DEPDIR)/OpenSSLCryptoBase64.Plo
#	source='enc/OpenSSL/OpenSSLCryptoBase64.cpp' object='OpenSSLCryptoBase64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoBase64.lo `test -f 'enc/OpenSSL/OpenSSLCryptoBase64.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoBase64.cpp

OpenSSLCryptoKeyDSA.lo: enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoKeyDSA.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoKeyDSA.Tpo -c -o OpenSSLCryptoKeyDSA.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoKeyDSA.Tpo $(DEPDIR)/OpenSSLCryptoKeyDSA.Plo
#	source='enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp' object='OpenSSLCryptoKeyDSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoKeyDSA.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyDSA.cpp

OpenSSLCryptoKeyEC.lo: enc/OpenSSL/OpenSSLCryptoKeyEC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoKeyEC.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoKeyEC.Tpo -c -o OpenSSLCryptoKeyEC.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyEC.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyEC.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoKeyEC.Tpo $(DEPDIR)/OpenSSLCryptoKeyEC.Plo
#	source='enc/OpenSSL/OpenSSLCryptoKeyEC.cpp' object='OpenSSLCryptoKeyEC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoKeyEC.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyEC.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyEC.cpp

OpenSSLCryptoSymmetricKey.lo: enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoSymmetricKey.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoSymmetricKey.Tpo -c -o OpenSSLCryptoSymmetricKey.lo `test -f 'enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoSymmetricKey.Tpo $(DEPDIR)/OpenSSLCryptoSymmetricKey.Plo
#	source='enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp' object='OpenSSLCryptoSymmetricKey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoSymmetricKey.lo `test -f 'enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoSymmetricKey.cpp

OpenSSLCryptoKeyHMAC.lo: enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OpenSSLCryptoKeyHMAC.lo -MD -MP -MF $(DEPDIR)/OpenSSLCryptoKeyHMAC.Tpo -c -o OpenSSLCryptoKeyHMAC.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp
	$(am__mv) $(DEPDIR)/OpenSSLCryptoKeyHMAC.Tpo $(DEPDIR)/OpenSSLCryptoKeyHMAC.Plo
#	source='enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp' object='OpenSSLCryptoKeyHMAC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OpenSSLCryptoKeyHMAC.lo `test -f 'enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp' || echo '$(srcdir)/'`enc/OpenSSL/OpenSSLCryptoKeyHMAC.cpp

NSSCryptoX509.lo: enc/NSS/NSSCryptoX509.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoX509.lo -MD -MP -MF $(DEPDIR)/NSSCryptoX509.Tpo -c -o NSSCryptoX509.lo `test -f 'enc/NSS/NSSCryptoX509.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoX509.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoX509.Tpo $(DEPDIR)/NSSCryptoX509.Plo
#	source='enc/NSS/NSSCryptoX509.cpp' object='NSSCryptoX509.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoX509.lo `test -f 'enc/NSS/NSSCryptoX509.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoX509.cpp

NSSCryptoHashHMAC.lo: enc/NSS/NSSCryptoHashHMAC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoHashHMAC.lo -MD -MP -MF $(DEPDIR)/NSSCryptoHashHMAC.Tpo -c -o NSSCryptoHashHMAC.lo `test -f 'enc/NSS/NSSCryptoHashHMAC.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoHashHMAC.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoHashHMAC.Tpo $(DEPDIR)/NSSCryptoHashHMAC.Plo
#	source='enc/NSS/NSSCryptoHashHMAC.cpp' object='NSSCryptoHashHMAC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoHashHMAC.lo `test -f 'enc/NSS/NSSCryptoHashHMAC.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoHashHMAC.cpp

NSSCryptoHash.lo: enc/NSS/NSSCryptoHash.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoHash.lo -MD -MP -MF $(DEPDIR)/NSSCryptoHash.Tpo -c -o NSSCryptoHash.lo `test -f 'enc/NSS/NSSCryptoHash.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoHash.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoHash.Tpo $(DEPDIR)/NSSCryptoHash.Plo
#	source='enc/NSS/NSSCryptoHash.cpp' object='NSSCryptoHash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoHash.lo `test -f 'enc/NSS/NSSCryptoHash.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoHash.cpp

NSSCryptoKeyDSA.lo: enc/NSS/NSSCryptoKeyDSA.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoKeyDSA.lo -MD -MP -MF $(DEPDIR)/NSSCryptoKeyDSA.Tpo -c -o NSSCryptoKeyDSA.lo `test -f 'enc/NSS/NSSCryptoKeyDSA.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoKeyDSA.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoKeyDSA.Tpo $(DEPDIR)/NSSCryptoKeyDSA.Plo
#	source='enc/NSS/NSSCryptoKeyDSA.cpp' object='NSSCryptoKeyDSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoKeyDSA.lo `test -f 'enc/NSS/NSSCryptoKeyDSA.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoKeyDSA.cpp

NSSCryptoProvider.lo: enc/NSS/NSSCryptoProvider.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoProvider.lo -MD -MP -MF $(DEPDIR)/NSSCryptoProvider.Tpo -c -o NSSCryptoProvider.lo `test -f 'enc/NSS/NSSCryptoProvider.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoProvider.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoProvider.Tpo $(DEPDIR)/NSSCryptoProvider.Plo
#	source='enc/NSS/NSSCryptoProvider.cpp' object='NSSCryptoProvider.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoProvider.lo `test -f 'enc/NSS/NSSCryptoProvider.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoProvider.cpp

NSSCryptoSymmetricKey.lo: enc/NSS/NSSCryptoSymmetricKey.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoSymmetricKey.lo -MD -MP -MF $(DEPDIR)/NSSCryptoSymmetricKey.Tpo -c -o NSSCryptoSymmetricKey.lo `test -f 'enc/NSS/NSSCryptoSymmetricKey.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoSymmetricKey.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoSymmetricKey.Tpo $(DEPDIR)/NSSCryptoSymmetricKey.Plo
#	source='enc/NSS/NSSCryptoSymmetricKey.cpp' object='NSSCryptoSymmetricKey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoSymmetricKey.lo `test -f 'enc/NSS/NSSCryptoSymmetricKey.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoSymmetricKey.cpp

NSSCryptoKeyRSA.lo: enc/NSS/NSSCryptoKeyRSA.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoKeyRSA.lo -MD -MP -MF $(DEPDIR)/NSSCryptoKeyRSA.Tpo -c -o NSSCryptoKeyRSA.lo `test -f 'enc/NSS/NSSCryptoKeyRSA.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoKeyRSA.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoKeyRSA.Tpo $(DEPDIR)/NSSCryptoKeyRSA.Plo
#	source='enc/NSS/NSSCryptoKeyRSA.cpp' object='NSSCryptoKeyRSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoKeyRSA.lo `test -f 'enc/NSS/NSSCryptoKeyRSA.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoKeyRSA.cpp

NSSCryptoKeyHMAC.lo: enc/NSS/NSSCryptoKeyHMAC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSSCryptoKeyHMAC.lo -MD -MP -MF $(DEPDIR)/NSSCryptoKeyHMAC.Tpo -c -o NSSCryptoKeyHMAC.lo `test -f 'enc/NSS/NSSCryptoKeyHMAC.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoKeyHMAC.cpp
	$(am__mv) $(DEPDIR)/NSSCryptoKeyHMAC.Tpo $(DEPDIR)/NSSCryptoKeyHMAC.Plo
#	source='enc/NSS/NSSCryptoKeyHMAC.cpp' object='NSSCryptoKeyHMAC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSSCryptoKeyHMAC.lo `test -f 'enc/NSS/NSSCryptoKeyHMAC.cpp' || echo '$(srcdir)/'`enc/NSS/NSSCryptoKeyHMAC.cpp

c14n.o: tools/c14n/c14n.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c14n.o -MD -MP -MF $(DEPDIR)/c14n.Tpo -c -o c14n.o `test -f 'tools/c14n/c14n.cpp' || echo '$(srcdir)/'`tools/c14n/c14n.cpp
	$(am__mv) $(DEPDIR)/c14n.Tpo $(DEPDIR)/c14n.Po
#	source='tools/c14n/c14n.cpp' object='c14n.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c14n.o `test -f 'tools/c14n/c14n.cpp' || echo '$(srcdir)/'`tools/c14n/c14n.cpp

c14n.obj: tools/c14n/c14n.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c14n.obj -MD -MP -MF $(DEPDIR)/c14n.Tpo -c -o c14n.obj `if test -f 'tools/c14n/c14n.cpp'; then $(CYGPATH_W) 'tools/c14n/c14n.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/c14n/c14n.cpp'; fi`
	$(am__mv) $(DEPDIR)/c14n.Tpo $(DEPDIR)/c14n.Po
#	source='tools/c14n/c14n.cpp' object='c14n.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c14n.obj `if test -f 'tools/c14n/c14n.cpp'; then $(CYGPATH_W) 'tools/c14n/c14n.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/c14n/c14n.cpp'; fi`

checksig.o: tools/checksig/checksig.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT checksig.o -MD -MP -MF $(DEPDIR)/checksig.Tpo -c -o checksig.o `test -f 'tools/checksig/checksig.cpp' || echo '$(srcdir)/'`tools/checksig/checksig.cpp
	$(am__mv) $(DEPDIR)/checksig.Tpo $(DEPDIR)/checksig.Po
#	source='tools/checksig/checksig.cpp' object='checksig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o checksig.o `test -f 'tools/checksig/checksig.cpp' || echo '$(srcdir)/'`tools/checksig/checksig.cpp

checksig.obj: tools/checksig/checksig.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT checksig.obj -MD -MP -MF $(DEPDIR)/checksig.Tpo -c -o checksig.obj `if test -f 'tools/checksig/checksig.cpp'; then $(CYGPATH_W) 'tools/checksig/checksig.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/checksig/checksig.cpp'; fi`
	$(am__mv) $(DEPDIR)/checksig.Tpo $(DEPDIR)/checksig.Po
#	source='tools/checksig/checksig.cpp' object='checksig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o checksig.obj `if test -f 'tools/checksig/checksig.cpp'; then $(CYGPATH_W) 'tools/checksig/checksig.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/checksig/checksig.cpp'; fi`

AnonymousResolver.o: tools/checksig/AnonymousResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AnonymousResolver.o -MD -MP -MF $(DEPDIR)/AnonymousResolver.Tpo -c -o AnonymousResolver.o `test -f 'tools/checksig/AnonymousResolver.cpp' || echo '$(srcdir)/'`tools/checksig/AnonymousResolver.cpp
	$(am__mv) $(DEPDIR)/AnonymousResolver.Tpo $(DEPDIR)/AnonymousResolver.Po
#	source='tools/checksig/AnonymousResolver.cpp' object='AnonymousResolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AnonymousResolver.o `test -f 'tools/checksig/AnonymousResolver.cpp' || echo '$(srcdir)/'`tools/checksig/AnonymousResolver.cpp

AnonymousResolver.obj: tools/checksig/AnonymousResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AnonymousResolver.obj -MD -MP -MF $(DEPDIR)/AnonymousResolver.Tpo -c -o AnonymousResolver.obj `if test -f 'tools/checksig/AnonymousResolver.cpp'; then $(CYGPATH_W) 'tools/checksig/AnonymousResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/checksig/AnonymousResolver.cpp'; fi`
	$(am__mv) $(DEPDIR)/AnonymousResolver.Tpo $(DEPDIR)/AnonymousResolver.Po
#	source='tools/checksig/AnonymousResolver.cpp' object='AnonymousResolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AnonymousResolver.obj `if test -f 'tools/checksig/AnonymousResolver.cpp'; then $(CYGPATH_W) 'tools/checksig/AnonymousResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/checksig/AnonymousResolver.cpp'; fi`

InteropResolver.o: tools/checksig/InteropResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InteropResolver.o -MD -MP -MF $(DEPDIR)/InteropResolver.Tpo -c -o InteropResolver.o `test -f 'tools/checksig/InteropResolver.cpp' || echo '$(srcdir)/'`tools/checksig/InteropResolver.cpp
	$(am__mv) $(DEPDIR)/InteropResolver.Tpo $(DEPDIR)/InteropResolver.Po
#	source='tools/checksig/InteropResolver.cpp' object='InteropResolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InteropResolver.o `test -f 'tools/checksig/InteropResolver.cpp' || echo '$(srcdir)/'`tools/checksig/InteropResolver.cpp

InteropResolver.obj: tools/checksig/InteropResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InteropResolver.obj -MD -MP -MF $(DEPDIR)/InteropResolver.Tpo -c -o InteropResolver.obj `if test -f 'tools/checksig/InteropResolver.cpp'; then $(CYGPATH_W) 'tools/checksig/InteropResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/checksig/InteropResolver.cpp'; fi`
	$(am__mv) $(DEPDIR)/InteropResolver.Tpo $(DEPDIR)/InteropResolver.Po
#	source='tools/checksig/InteropResolver.cpp' object='InteropResolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InteropResolver.obj `if test -f 'tools/checksig/InteropResolver.cpp'; then $(CYGPATH_W) 'tools/checksig/InteropResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/checksig/InteropResolver.cpp'; fi`

cipher.o: tools/cipher/cipher.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cipher.o -MD -MP -MF $(DEPDIR)/cipher.Tpo -c -o cipher.o `test -f 'tools/cipher/cipher.cpp' || echo '$(srcdir)/'`tools/cipher/cipher.cpp
	$(am__mv) $(DEPDIR)/cipher.Tpo $(DEPDIR)/cipher.Po
#	source='tools/cipher/cipher.cpp' object='cipher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cipher.o `test -f 'tools/cipher/cipher.cpp' || echo '$(srcdir)/'`tools/cipher/cipher.cpp

cipher.obj: tools/cipher/cipher.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cipher.obj -MD -MP -MF $(DEPDIR)/cipher.Tpo -c -o cipher.obj `if test -f 'tools/cipher/cipher.cpp'; then $(CYGPATH_W) 'tools/cipher/cipher.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/cipher/cipher.cpp'; fi`
	$(am__mv) $(DEPDIR)/cipher.Tpo $(DEPDIR)/cipher.Po
#	source='tools/cipher/cipher.cpp' object='cipher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cipher.obj `if test -f 'tools/cipher/cipher.cpp'; then $(CYGPATH_W) 'tools/cipher/cipher.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/cipher/cipher.cpp'; fi`

XencInteropResolver.o: tools/cipher/XencInteropResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XencInteropResolver.o -MD -MP -MF $(DEPDIR)/XencInteropResolver.Tpo -c -o XencInteropResolver.o `test -f 'tools/cipher/XencInteropResolver.cpp' || echo '$(srcdir)/'`tools/cipher/XencInteropResolver.cpp
	$(am__mv) $(DEPDIR)/XencInteropResolver.Tpo $(DEPDIR)/XencInteropResolver.Po
#	source='tools/cipher/XencInteropResolver.cpp' object='XencInteropResolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XencInteropResolver.o `test -f 'tools/cipher/XencInteropResolver.cpp' || echo '$(srcdir)/'`tools/cipher/XencInteropResolver.cpp

XencInteropResolver.obj: tools/cipher/XencInteropResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XencInteropResolver.obj -MD -MP -MF $(DEPDIR)/XencInteropResolver.Tpo -c -o XencInteropResolver.obj `if test -f 'tools/cipher/XencInteropResolver.cpp'; then $(CYGPATH_W) 'tools/cipher/XencInteropResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/cipher/XencInteropResolver.cpp'; fi`
	$(am__mv) $(DEPDIR)/XencInteropResolver.Tpo $(DEPDIR)/XencInteropResolver.Po
#	source='tools/cipher/XencInteropResolver.cpp' object='XencInteropResolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XencInteropResolver.obj `if test -f 'tools/cipher/XencInteropResolver.cpp'; then $(CYGPATH_W) 'tools/cipher/XencInteropResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/cipher/XencInteropResolver.cpp'; fi`

siginf.o: tools/siginf/siginf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT siginf.o -MD -MP -MF $(DEPDIR)/siginf.Tpo -c -o siginf.o `test -f 'tools/siginf/siginf.cpp' || echo '$(srcdir)/'`tools/siginf/siginf.cpp
	$(am__mv) $(DEPDIR)/siginf.Tpo $(DEPDIR)/siginf.Po
#	source='tools/siginf/siginf.cpp' object='siginf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o siginf.o `test -f 'tools/siginf/siginf.cpp' || echo '$(srcdir)/'`tools/siginf/siginf.cpp

siginf.obj: tools/siginf/siginf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT siginf.obj -MD -MP -MF $(DEPDIR)/siginf.Tpo -c -o siginf.obj `if test -f 'tools/siginf/siginf.cpp'; then $(CYGPATH_W) 'tools/siginf/siginf.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/siginf/siginf.cpp'; fi`
	$(am__mv) $(DEPDIR)/siginf.Tpo $(DEPDIR)/siginf.Po
#	source='tools/siginf/siginf.cpp' object='siginf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o siginf.obj `if test -f 'tools/siginf/siginf.cpp'; then $(CYGPATH_W) 'tools/siginf/siginf.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/siginf/siginf.cpp'; fi`

simpleDecrypt.o: samples/simpleDecrypt.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleDecrypt.o -MD -MP -MF $(DEPDIR)/simpleDecrypt.Tpo -c -o simpleDecrypt.o `test -f 'samples/simpleDecrypt.cpp' || echo '$(srcdir)/'`samples/simpleDecrypt.cpp
	$(am__mv) $(DEPDIR)/simpleDecrypt.Tpo $(DEPDIR)/simpleDecrypt.Po
#	source='samples/simpleDecrypt.cpp' object='simpleDecrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleDecrypt.o `test -f 'samples/simpleDecrypt.cpp' || echo '$(srcdir)/'`samples/simpleDecrypt.cpp

simpleDecrypt.obj: samples/simpleDecrypt.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleDecrypt.obj -MD -MP -MF $(DEPDIR)/simpleDecrypt.Tpo -c -o simpleDecrypt.obj `if test -f 'samples/simpleDecrypt.cpp'; then $(CYGPATH_W) 'samples/simpleDecrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleDecrypt.cpp'; fi`
	$(am__mv) $(DEPDIR)/simpleDecrypt.Tpo $(DEPDIR)/simpleDecrypt.Po
#	source='samples/simpleDecrypt.cpp' object='simpleDecrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleDecrypt.obj `if test -f 'samples/simpleDecrypt.cpp'; then $(CYGPATH_W) 'samples/simpleDecrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleDecrypt.cpp'; fi`

IOStreamOutputter.o: samples/IOStreamOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IOStreamOutputter.o -MD -MP -MF $(DEPDIR)/IOStreamOutputter.Tpo -c -o IOStreamOutputter.o `test -f 'samples/IOStreamOutputter.cpp' || echo '$(srcdir)/'`samples/IOStreamOutputter.cpp
	$(am__mv) $(DEPDIR)/IOStreamOutputter.Tpo $(DEPDIR)/IOStreamOutputter.Po
#	source='samples/IOStreamOutputter.cpp' object='IOStreamOutputter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IOStreamOutputter.o `test -f 'samples/IOStreamOutputter.cpp' || echo '$(srcdir)/'`samples/IOStreamOutputter.cpp

IOStreamOutputter.obj: samples/IOStreamOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IOStreamOutputter.obj -MD -MP -MF $(DEPDIR)/IOStreamOutputter.Tpo -c -o IOStreamOutputter.obj `if test -f 'samples/IOStreamOutputter.cpp'; then $(CYGPATH_W) 'samples/IOStreamOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/IOStreamOutputter.cpp'; fi`
	$(am__mv) $(DEPDIR)/IOStreamOutputter.Tpo $(DEPDIR)/IOStreamOutputter.Po
#	source='samples/IOStreamOutputter.cpp' object='IOStreamOutputter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IOStreamOutputter.obj `if test -f 'samples/IOStreamOutputter.cpp'; then $(CYGPATH_W) 'samples/IOStreamOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/IOStreamOutputter.cpp'; fi`

simpleEncrypt.o: samples/simpleEncrypt.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleEncrypt.o -MD -MP -MF $(DEPDIR)/simpleEncrypt.Tpo -c -o simpleEncrypt.o `test -f 'samples/simpleEncrypt.cpp' || echo '$(srcdir)/'`samples/simpleEncrypt.cpp
	$(am__mv) $(DEPDIR)/simpleEncrypt.Tpo $(DEPDIR)/simpleEncrypt.Po
#	source='samples/simpleEncrypt.cpp' object='simpleEncrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleEncrypt.o `test -f 'samples/simpleEncrypt.cpp' || echo '$(srcdir)/'`samples/simpleEncrypt.cpp

simpleEncrypt.obj: samples/simpleEncrypt.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleEncrypt.obj -MD -MP -MF $(DEPDIR)/simpleEncrypt.Tpo -c -o simpleEncrypt.obj `if test -f 'samples/simpleEncrypt.cpp'; then $(CYGPATH_W) 'samples/simpleEncrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleEncrypt.cpp'; fi`
	$(am__mv) $(DEPDIR)/simpleEncrypt.Tpo $(DEPDIR)/simpleEncrypt.Po
#	source='samples/simpleEncrypt.cpp' object='simpleEncrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleEncrypt.obj `if test -f 'samples/simpleEncrypt.cpp'; then $(CYGPATH_W) 'samples/simpleEncrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleEncrypt.cpp'; fi`

simpleHMAC.o: samples/simpleHMAC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleHMAC.o -MD -MP -MF $(DEPDIR)/simpleHMAC.Tpo -c -o simpleHMAC.o `test -f 'samples/simpleHMAC.cpp' || echo '$(srcdir)/'`samples/simpleHMAC.cpp
	$(am__mv) $(DEPDIR)/simpleHMAC.Tpo $(DEPDIR)/simpleHMAC.Po
#	source='samples/simpleHMAC.cpp' object='simpleHMAC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleHMAC.o `test -f 'samples/simpleHMAC.cpp' || echo '$(srcdir)/'`samples/simpleHMAC.cpp

simpleHMAC.obj: samples/simpleHMAC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleHMAC.obj -MD -MP -MF $(DEPDIR)/simpleHMAC.Tpo -c -o simpleHMAC.obj `if test -f 'samples/simpleHMAC.cpp'; then $(CYGPATH_W) 'samples/simpleHMAC.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleHMAC.cpp'; fi`
	$(am__mv) $(DEPDIR)/simpleHMAC.Tpo $(DEPDIR)/simpleHMAC.Po
#	source='samples/simpleHMAC.cpp' object='simpleHMAC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleHMAC.obj `if test -f 'samples/simpleHMAC.cpp'; then $(CYGPATH_W) 'samples/simpleHMAC.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleHMAC.cpp'; fi`

simpleValidate.o: samples/simpleValidate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleValidate.o -MD -MP -MF $(DEPDIR)/simpleValidate.Tpo -c -o simpleValidate.o `test -f 'samples/simpleValidate.cpp' || echo '$(srcdir)/'`samples/simpleValidate.cpp
	$(am__mv) $(DEPDIR)/simpleValidate.Tpo $(DEPDIR)/simpleValidate.Po
#	source='samples/simpleValidate.cpp' object='simpleValidate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleValidate.o `test -f 'samples/simpleValidate.cpp' || echo '$(srcdir)/'`samples/simpleValidate.cpp

simpleValidate.obj: samples/simpleValidate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simpleValidate.obj -MD -MP -MF $(DEPDIR)/simpleValidate.Tpo -c -o simpleValidate.obj `if test -f 'samples/simpleValidate.cpp'; then $(CYGPATH_W) 'samples/simpleValidate.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleValidate.cpp'; fi`
	$(am__mv) $(DEPDIR)/simpleValidate.Tpo $(DEPDIR)/simpleValidate.Po
#	source='samples/simpleValidate.cpp' object='simpleValidate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simpleValidate.obj `if test -f 'samples/simpleValidate.cpp'; then $(CYGPATH_W) 'samples/simpleValidate.cpp'; else $(CYGPATH_W) '$(srcdir)/samples/simpleValidate.cpp'; fi`

templatesign.o: tools/templatesign/templatesign.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT templatesign.o -MD -MP -MF $(DEPDIR)/templatesign.Tpo -c -o templatesign.o `test -f 'tools/templatesign/templatesign.cpp' || echo '$(srcdir)/'`tools/templatesign/templatesign.cpp
	$(am__mv) $(DEPDIR)/templatesign.Tpo $(DEPDIR)/templatesign.Po
#	source='tools/templatesign/templatesign.cpp' object='templatesign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o templatesign.o `test -f 'tools/templatesign/templatesign.cpp' || echo '$(srcdir)/'`tools/templatesign/templatesign.cpp

templatesign.obj: tools/templatesign/templatesign.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT templatesign.obj -MD -MP -MF $(DEPDIR)/templatesign.Tpo -c -o templatesign.obj `if test -f 'tools/templatesign/templatesign.cpp'; then $(CYGPATH_W) 'tools/templatesign/templatesign.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/templatesign/templatesign.cpp'; fi`
	$(am__mv) $(DEPDIR)/templatesign.Tpo $(DEPDIR)/templatesign.Po
#	source='tools/templatesign/templatesign.cpp' object='templatesign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o templatesign.obj `if test -f 'tools/templatesign/templatesign.cpp'; then $(CYGPATH_W) 'tools/templatesign/templatesign.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/templatesign/templatesign.cpp'; fi`

txfmout.o: tools/txfmout/txfmout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT txfmout.o -MD -MP -MF $(DEPDIR)/txfmout.Tpo -c -o txfmout.o `test -f 'tools/txfmout/txfmout.cpp' || echo '$(srcdir)/'`tools/txfmout/txfmout.cpp
	$(am__mv) $(DEPDIR)/txfmout.Tpo $(DEPDIR)/txfmout.Po
#	source='tools/txfmout/txfmout.cpp' object='txfmout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o txfmout.o `test -f 'tools/txfmout/txfmout.cpp' || echo '$(srcdir)/'`tools/txfmout/txfmout.cpp

txfmout.obj: tools/txfmout/txfmout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT txfmout.obj -MD -MP -MF $(DEPDIR)/txfmout.Tpo -c -o txfmout.obj `if test -f 'tools/txfmout/txfmout.cpp'; then $(CYGPATH_W) 'tools/txfmout/txfmout.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/txfmout/txfmout.cpp'; fi`
	$(am__mv) $(DEPDIR)/txfmout.Tpo $(DEPDIR)/txfmout.Po
#	source='tools/txfmout/txfmout.cpp' object='txfmout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o txfmout.obj `if test -f 'tools/txfmout/txfmout.cpp'; then $(CYGPATH_W) 'tools/txfmout/txfmout.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/txfmout/txfmout.cpp'; fi`

xklient.o: tools/xklient/xklient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xklient.o -MD -MP -MF $(DEPDIR)/xklient.Tpo -c -o xklient.o `test -f 'tools/xklient/xklient.cpp' || echo '$(srcdir)/'`tools/xklient/xklient.cpp
	$(am__mv) $(DEPDIR)/xklient.Tpo $(DEPDIR)/xklient.Po
#	source='tools/xklient/xklient.cpp' object='xklient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xklient.o `test -f 'tools/xklient/xklient.cpp' || echo '$(srcdir)/'`tools/xklient/xklient.cpp

xklient.obj: tools/xklient/xklient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xklient.obj -MD -MP -MF $(DEPDIR)/xklient.Tpo -c -o xklient.obj `if test -f 'tools/xklient/xklient.cpp'; then $(CYGPATH_W) 'tools/xklient/xklient.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/xklient/xklient.cpp'; fi`
	$(am__mv) $(DEPDIR)/xklient.Tpo $(DEPDIR)/xklient.Po
#	source='tools/xklient/xklient.cpp' object='xklient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xklient.obj `if test -f 'tools/xklient/xklient.cpp'; then $(CYGPATH_W) 'tools/xklient/xklient.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/xklient/xklient.cpp'; fi`

xtest.o: tools/xtest/xtest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xtest.o -MD -MP -MF $(DEPDIR)/xtest.Tpo -c -o xtest.o `test -f 'tools/xtest/xtest.cpp' || echo '$(srcdir)/'`tools/xtest/xtest.cpp
	$(am__mv) $(DEPDIR)/xtest.Tpo $(DEPDIR)/xtest.Po
#	source='tools/xtest/xtest.cpp' object='xtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xtest.o `test -f 'tools/xtest/xtest.cpp' || echo '$(srcdir)/'`tools/xtest/xtest.cpp

xtest.obj: tools/xtest/xtest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xtest.obj -MD -MP -MF $(DEPDIR)/xtest.Tpo -c -o xtest.obj `if test -f 'tools/xtest/xtest.cpp'; then $(CYGPATH_W) 'tools/xtest/xtest.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/xtest/xtest.cpp'; fi`
	$(am__mv) $(DEPDIR)/xtest.Tpo $(DEPDIR)/xtest.Po
#	source='tools/xtest/xtest.cpp' object='xtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xtest.obj `if test -f 'tools/xtest/xtest.cpp'; then $(CYGPATH_W) 'tools/xtest/xtest.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/xtest/xtest.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-canonincludeHEADERS: $(canoninclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(canoninclude_HEADERS)'; test -n "$(canonincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(canonincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(canonincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(canonincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(canonincludedir)" || exit $$?; \
	done

uninstall-canonincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(canoninclude_HEADERS)'; test -n "$(canonincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(canonincludedir)'; $(am__uninstall_files_from_dir)
install-dsigincludeHEADERS: $(dsiginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(dsiginclude_HEADERS)'; test -n "$(dsigincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dsigincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dsigincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(dsigincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(dsigincludedir)" || exit $$?; \
	done

uninstall-dsigincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(dsiginclude_HEADERS)'; test -n "$(dsigincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dsigincludedir)'; $(am__uninstall_files_from_dir)
install-encincludeHEADERS: $(encinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(encinclude_HEADERS)'; test -n "$(encincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(encincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(encincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(encincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(encincludedir)" || exit $$?; \
	done

uninstall-encincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(encinclude_HEADERS)'; test -n "$(encincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(encincludedir)'; $(am__uninstall_files_from_dir)
install-frameworkincludeHEADERS: $(frameworkinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(frameworkinclude_HEADERS)'; test -n "$(frameworkincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(frameworkincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(frameworkincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(frameworkincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(frameworkincludedir)" || exit $$?; \
	done

uninstall-frameworkincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(frameworkinclude_HEADERS)'; test -n "$(frameworkincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(frameworkincludedir)'; $(am__uninstall_files_from_dir)
install-nssincludeHEADERS: $(nssinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nssinclude_HEADERS)'; test -n "$(nssincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(nssincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(nssincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(nssincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(nssincludedir)" || exit $$?; \
	done

uninstall-nssincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nssinclude_HEADERS)'; test -n "$(nssincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(nssincludedir)'; $(am__uninstall_files_from_dir)
install-opensslincludeHEADERS: $(opensslinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(opensslinclude_HEADERS)'; test -n "$(opensslincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(opensslincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(opensslincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(opensslincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(opensslincludedir)" || exit $$?; \
	done

uninstall-opensslincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(opensslinclude_HEADERS)'; test -n "$(opensslincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(opensslincludedir)'; $(am__uninstall_files_from_dir)
install-transformersincludeHEADERS: $(transformersinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(transformersinclude_HEADERS)'; test -n "$(transformersincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(transformersincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(transformersincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(transformersincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(transformersincludedir)" || exit $$?; \
	done

uninstall-transformersincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(transformersinclude_HEADERS)'; test -n "$(transformersincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(transformersincludedir)'; $(am__uninstall_files_from_dir)
install-unixutilsincludeHEADERS: $(unixutilsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(unixutilsinclude_HEADERS)'; test -n "$(unixutilsincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(unixutilsincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(unixutilsincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(unixutilsincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(unixutilsincludedir)" || exit $$?; \
	done

uninstall-unixutilsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(unixutilsinclude_HEADERS)'; test -n "$(unixutilsincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(unixutilsincludedir)'; $(am__uninstall_files_from_dir)
install-utilsincludeHEADERS: $(utilsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(utilsinclude_HEADERS)'; test -n "$(utilsincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(utilsincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(utilsincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(utilsincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(utilsincludedir)" || exit $$?; \
	done

uninstall-utilsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(utilsinclude_HEADERS)'; test -n "$(utilsincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(utilsincludedir)'; $(am__uninstall_files_from_dir)
install-xencincludeHEADERS: $(xencinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(xencinclude_HEADERS)'; test -n "$(xencincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xencincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xencincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(xencincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(xencincludedir)" || exit $$?; \
	done

uninstall-xencincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(xencinclude_HEADERS)'; test -n "$(xencincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xencincludedir)'; $(am__uninstall_files_from_dir)
install-xkmsincludeHEADERS: $(xkmsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(xkmsinclude_HEADERS)'; test -n "$(xkmsincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xkmsincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xkmsincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(xkmsincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(xkmsincludedir)" || exit $$?; \
	done

uninstall-xkmsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(xkmsinclude_HEADERS)'; test -n "$(xkmsincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xkmsincludedir)'; $(am__uninstall_files_from_dir)
install-xscryptincludeHEADERS: $(xscryptinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(xscryptinclude_HEADERS)'; test -n "$(xscryptincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xscryptincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xscryptincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(xscryptincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(xscryptincludedir)" || exit $$?; \
	done

uninstall-xscryptincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(xscryptinclude_HEADERS)'; test -n "$(xscryptincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xscryptincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(canonincludedir)" "$(DESTDIR)$(dsigincludedir)" "$(DESTDIR)$(encincludedir)" "$(DESTDIR)$(frameworkincludedir)" "$(DESTDIR)$(nssincludedir)" "$(DESTDIR)$(opensslincludedir)" "$(DESTDIR)$(transformersincludedir)" "$(DESTDIR)$(unixutilsincludedir)" "$(DESTDIR)$(utilsincludedir)" "$(DESTDIR)$(xencincludedir)" "$(DESTDIR)$(xkmsincludedir)" "$(DESTDIR)$(xscryptincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-canonincludeHEADERS \
	install-dsigincludeHEADERS install-encincludeHEADERS \
	install-frameworkincludeHEADERS install-nssincludeHEADERS \
	install-opensslincludeHEADERS \
	install-transformersincludeHEADERS \
	install-unixutilsincludeHEADERS install-utilsincludeHEADERS \
	install-xencincludeHEADERS install-xkmsincludeHEADERS \
	install-xscryptincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-canonincludeHEADERS \
	uninstall-dsigincludeHEADERS uninstall-encincludeHEADERS \
	uninstall-frameworkincludeHEADERS uninstall-libLTLIBRARIES \
	uninstall-nssincludeHEADERS uninstall-opensslincludeHEADERS \
	uninstall-transformersincludeHEADERS \
	uninstall-unixutilsincludeHEADERS \
	uninstall-utilsincludeHEADERS uninstall-xencincludeHEADERS \
	uninstall-xkmsincludeHEADERS uninstall-xscryptincludeHEADERS

.MAKE: install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS \
	install-canonincludeHEADERS install-data install-data-am \
	install-dsigincludeHEADERS install-dvi install-dvi-am \
	install-encincludeHEADERS install-exec install-exec-am \
	install-exec-hook install-frameworkincludeHEADERS install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-nssincludeHEADERS \
	install-opensslincludeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip \
	install-transformersincludeHEADERS \
	install-unixutilsincludeHEADERS install-utilsincludeHEADERS \
	install-xencincludeHEADERS install-xkmsincludeHEADERS \
	install-xscryptincludeHEADERS installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS \
	uninstall-canonincludeHEADERS uninstall-dsigincludeHEADERS \
	uninstall-encincludeHEADERS uninstall-frameworkincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-nssincludeHEADERS \
	uninstall-opensslincludeHEADERS \
	uninstall-transformersincludeHEADERS \
	uninstall-unixutilsincludeHEADERS \
	uninstall-utilsincludeHEADERS uninstall-xencincludeHEADERS \
	uninstall-xkmsincludeHEADERS uninstall-xscryptincludeHEADERS


install-exec-hook:
	for la in $(lib_LTLIBRARIES) ; do rm -f $(DESTDIR)$(libdir)/$$la ; done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
